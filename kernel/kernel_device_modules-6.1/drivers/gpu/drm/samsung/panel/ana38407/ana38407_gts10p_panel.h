/*
 * linux/drivers/video/fbdev/exynos/panel/ana38407/ana38407_gts10p_panel.h
 *
 * Header file for ANA38407 Dimming Driver
 *
 * Copyright (c) 2016 Samsung Electronics
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */

#ifndef __ANA38407_GTS10P_PANEL_H__
#define __ANA38407_GTS10P_PANEL_H__

#include "../panel.h"
#include "../panel_drv.h"
#include "oled_function.h"
#include "oled_property.h"
#include "ana38407.h"
#include "ana38407_gts10p.h"
#include "ana38407_dimming.h"
#ifdef CONFIG_USDM_MDNIE
#include "ana38407_gts10p_panel_mdnie.h"
#endif
#include "ana38407_gts10p_panel_dimming.h"
#include "ana38407_gts10p_resol.h"

#ifdef CONFIG_USDM_PANEL_SELF_DISPLAY
#include "ana38407_gts10p_aod_panel.h"
#include "../aod/aod_drv.h"
#endif

#undef __pn_name__
#define __pn_name__	gts10p

#undef __PN_NAME__
#define __PN_NAME__

static u8 gts10p_brt_table[ANA38407_TOTAL_STEP][2] = {
	{ 0x00, 0x0A }, { 0x00, 0x0A }, { 0x00, 0x0A }, { 0x00, 0x0A }, { 0x00, 0x0B }, { 0x00, 0x0B }, { 0x00, 0x0B }, { 0x00, 0x0B }, { 0x00, 0x0B }, { 0x00, 0x0C },
	{ 0x00, 0x0C }, { 0x00, 0x0C }, { 0x00, 0x0C }, { 0x00, 0x0D }, { 0x00, 0x0D }, { 0x00, 0x0D }, { 0x00, 0x0E }, { 0x00, 0x0E }, { 0x00, 0x0E }, { 0x00, 0x0E },
	{ 0x00, 0x0F }, { 0x00, 0x0F }, { 0x00, 0x0F }, { 0x00, 0x10 }, { 0x00, 0x10 }, { 0x00, 0x10 }, { 0x00, 0x11 }, { 0x00, 0x11 }, { 0x00, 0x11 }, { 0x00, 0x12 },
	{ 0x00, 0x12 }, { 0x00, 0x12 }, { 0x00, 0x13 }, { 0x00, 0x13 }, { 0x00, 0x14 }, { 0x00, 0x14 }, { 0x00, 0x14 }, { 0x00, 0x15 }, { 0x00, 0x15 }, { 0x00, 0x15 },
	{ 0x00, 0x16 }, { 0x00, 0x16 }, { 0x00, 0x17 }, { 0x00, 0x17 }, { 0x00, 0x17 }, { 0x00, 0x18 }, { 0x00, 0x18 }, { 0x00, 0x19 }, { 0x00, 0x19 }, { 0x00, 0x19 },
	{ 0x00, 0x1A }, { 0x00, 0x1A }, { 0x00, 0x1B }, { 0x00, 0x1B }, { 0x00, 0x1B }, { 0x00, 0x1C }, { 0x00, 0x1C }, { 0x00, 0x1D }, { 0x00, 0x1D }, { 0x00, 0x1E },
	{ 0x00, 0x1E }, { 0x00, 0x1E }, { 0x00, 0x1F }, { 0x00, 0x1F }, { 0x00, 0x20 }, { 0x00, 0x20 }, { 0x00, 0x21 }, { 0x00, 0x21 }, { 0x00, 0x22 }, { 0x00, 0x22 },
	{ 0x00, 0x23 }, { 0x00, 0x23 }, { 0x00, 0x23 }, { 0x00, 0x24 }, { 0x00, 0x24 }, { 0x00, 0x25 }, { 0x00, 0x25 }, { 0x00, 0x26 }, { 0x00, 0x26 }, { 0x00, 0x27 },
	{ 0x00, 0x27 }, { 0x00, 0x28 }, { 0x00, 0x28 }, { 0x00, 0x29 }, { 0x00, 0x29 }, { 0x00, 0x2A }, { 0x00, 0x2A }, { 0x00, 0x2B }, { 0x00, 0x2B }, { 0x00, 0x2B },
	{ 0x00, 0x2C }, { 0x00, 0x2C }, { 0x00, 0x2D }, { 0x00, 0x2D }, { 0x00, 0x2E }, { 0x00, 0x2E }, { 0x00, 0x2F }, { 0x00, 0x2F }, { 0x00, 0x30 }, { 0x00, 0x30 },
	{ 0x00, 0x31 }, { 0x00, 0x31 }, { 0x00, 0x32 }, { 0x00, 0x32 }, { 0x00, 0x33 }, { 0x00, 0x34 }, { 0x00, 0x34 }, { 0x00, 0x35 }, { 0x00, 0x35 }, { 0x00, 0x36 },
	{ 0x00, 0x36 }, { 0x00, 0x37 }, { 0x00, 0x37 }, { 0x00, 0x38 }, { 0x00, 0x38 }, { 0x00, 0x39 }, { 0x00, 0x39 }, { 0x00, 0x3A }, { 0x00, 0x3A }, { 0x00, 0x3B },
	{ 0x00, 0x3B }, { 0x00, 0x3C }, { 0x00, 0x3C }, { 0x00, 0x3D }, { 0x00, 0x3E }, { 0x00, 0x3E }, { 0x00, 0x3F }, { 0x00, 0x3F }, { 0x00, 0x40 }, { 0x00, 0x40 },
	{ 0x00, 0x41 }, { 0x00, 0x41 }, { 0x00, 0x42 }, { 0x00, 0x42 }, { 0x00, 0x43 }, { 0x00, 0x44 }, { 0x00, 0x44 }, { 0x00, 0x45 }, { 0x00, 0x45 }, { 0x00, 0x46 },
	{ 0x00, 0x46 }, { 0x00, 0x47 }, { 0x00, 0x47 }, { 0x00, 0x48 }, { 0x00, 0x49 }, { 0x00, 0x49 }, { 0x00, 0x4A }, { 0x00, 0x4A }, { 0x00, 0x4B }, { 0x00, 0x4B },
	{ 0x00, 0x4C }, { 0x00, 0x4D }, { 0x00, 0x4D }, { 0x00, 0x4E }, { 0x00, 0x4E }, { 0x00, 0x4F }, { 0x00, 0x4F }, { 0x00, 0x50 }, { 0x00, 0x51 }, { 0x00, 0x51 },
	{ 0x00, 0x52 }, { 0x00, 0x52 }, { 0x00, 0x53 }, { 0x00, 0x54 }, { 0x00, 0x54 }, { 0x00, 0x55 }, { 0x00, 0x55 }, { 0x00, 0x56 }, { 0x00, 0x56 }, { 0x00, 0x57 },
	{ 0x00, 0x58 }, { 0x00, 0x58 }, { 0x00, 0x59 }, { 0x00, 0x59 }, { 0x00, 0x5A }, { 0x00, 0x5B }, { 0x00, 0x5B }, { 0x00, 0x5C }, { 0x00, 0x5C }, { 0x00, 0x5D },
	{ 0x00, 0x5E }, { 0x00, 0x5E }, { 0x00, 0x5F }, { 0x00, 0x5F }, { 0x00, 0x60 }, { 0x00, 0x61 }, { 0x00, 0x61 }, { 0x00, 0x62 }, { 0x00, 0x63 }, { 0x00, 0x63 },
	{ 0x00, 0x64 }, { 0x00, 0x64 }, { 0x00, 0x65 }, { 0x00, 0x66 }, { 0x00, 0x66 }, { 0x00, 0x67 }, { 0x00, 0x67 }, { 0x00, 0x68 }, { 0x00, 0x69 }, { 0x00, 0x69 },
	{ 0x00, 0x6A }, { 0x00, 0x6B }, { 0x00, 0x6B }, { 0x00, 0x6C }, { 0x00, 0x6C }, { 0x00, 0x6D }, { 0x00, 0x6E }, { 0x00, 0x6E }, { 0x00, 0x6F }, { 0x00, 0x70 },
	{ 0x00, 0x70 }, { 0x00, 0x71 }, { 0x00, 0x71 }, { 0x00, 0x72 }, { 0x00, 0x73 }, { 0x00, 0x73 }, { 0x00, 0x74 }, { 0x00, 0x75 }, { 0x00, 0x75 }, { 0x00, 0x76 },
	{ 0x00, 0x77 }, { 0x00, 0x77 }, { 0x00, 0x78 }, { 0x00, 0x78 }, { 0x00, 0x79 }, { 0x00, 0x7A }, { 0x00, 0x7A }, { 0x00, 0x7B }, { 0x00, 0x7C }, { 0x00, 0x7C },
	{ 0x00, 0x7D }, { 0x00, 0x7E }, { 0x00, 0x7E }, { 0x00, 0x7F }, { 0x00, 0x80 }, { 0x00, 0x80 }, { 0x00, 0x81 }, { 0x00, 0x82 }, { 0x00, 0x82 }, { 0x00, 0x83 },
	{ 0x00, 0x84 }, { 0x00, 0x84 }, { 0x00, 0x85 }, { 0x00, 0x86 }, { 0x00, 0x86 }, { 0x00, 0x87 }, { 0x00, 0x88 }, { 0x00, 0x88 }, { 0x00, 0x89 }, { 0x00, 0x8A },
	{ 0x00, 0x8A }, { 0x00, 0x8B }, { 0x00, 0x8C }, { 0x00, 0x8C }, { 0x00, 0x8D }, { 0x00, 0x8E }, { 0x00, 0x8E }, { 0x00, 0x8F }, { 0x00, 0x90 }, { 0x00, 0x90 },
	{ 0x00, 0x91 }, { 0x00, 0x92 }, { 0x00, 0x92 }, { 0x00, 0x93 }, { 0x00, 0x94 }, { 0x00, 0x94 }, { 0x00, 0x95 }, { 0x00, 0x96 }, { 0x00, 0x96 }, { 0x00, 0x97 },
	{ 0x00, 0x98 }, { 0x00, 0x98 }, { 0x00, 0x99 }, { 0x00, 0x9A }, { 0x00, 0x9A }, { 0x00, 0x9B }, { 0x00, 0x9C }, { 0x00, 0x9C }, { 0x00, 0x9D }, { 0x00, 0x9E },
	{ 0x00, 0x9F }, { 0x00, 0x9F }, { 0x00, 0xA0 }, { 0x00, 0xA1 }, { 0x00, 0xA1 }, { 0x00, 0xA2 }, { 0x00, 0xA3 }, { 0x00, 0xA3 }, { 0x00, 0xA4 }, { 0x00, 0xA5 },
	{ 0x00, 0xA5 }, { 0x00, 0xA6 }, { 0x00, 0xA7 }, { 0x00, 0xA8 }, { 0x00, 0xA8 }, { 0x00, 0xA9 }, { 0x00, 0xAA }, { 0x00, 0xAA }, { 0x00, 0xAB }, { 0x00, 0xAC },
	{ 0x00, 0xAC }, { 0x00, 0xAD }, { 0x00, 0xAE }, { 0x00, 0xAF }, { 0x00, 0xAF }, { 0x00, 0xB0 }, { 0x00, 0xB1 }, { 0x00, 0xB1 }, { 0x00, 0xB2 }, { 0x00, 0xB3 },
	{ 0x00, 0xB4 }, { 0x00, 0xB4 }, { 0x00, 0xB5 }, { 0x00, 0xB6 }, { 0x00, 0xB6 }, { 0x00, 0xB7 }, { 0x00, 0xB8 }, { 0x00, 0xB9 }, { 0x00, 0xB9 }, { 0x00, 0xBA },
	{ 0x00, 0xBB }, { 0x00, 0xBB }, { 0x00, 0xBC }, { 0x00, 0xBD }, { 0x00, 0xBE }, { 0x00, 0xBE }, { 0x00, 0xBF }, { 0x00, 0xC0 }, { 0x00, 0xC0 }, { 0x00, 0xC1 },
	{ 0x00, 0xC2 }, { 0x00, 0xC3 }, { 0x00, 0xC3 }, { 0x00, 0xC4 }, { 0x00, 0xC5 }, { 0x00, 0xC6 }, { 0x00, 0xC6 }, { 0x00, 0xC7 }, { 0x00, 0xC8 }, { 0x00, 0xC8 },
	{ 0x00, 0xC9 }, { 0x00, 0xCA }, { 0x00, 0xCB }, { 0x00, 0xCB }, { 0x00, 0xCC }, { 0x00, 0xCD }, { 0x00, 0xCE }, { 0x00, 0xCE }, { 0x00, 0xCF }, { 0x00, 0xD0 },
	{ 0x00, 0xD1 }, { 0x00, 0xD1 }, { 0x00, 0xD2 }, { 0x00, 0xD3 }, { 0x00, 0xD3 }, { 0x00, 0xD4 }, { 0x00, 0xD5 }, { 0x00, 0xD6 }, { 0x00, 0xD6 }, { 0x00, 0xD7 },
	{ 0x00, 0xD8 }, { 0x00, 0xD9 }, { 0x00, 0xD9 }, { 0x00, 0xDA }, { 0x00, 0xDB }, { 0x00, 0xDC }, { 0x00, 0xDC }, { 0x00, 0xDD }, { 0x00, 0xDE }, { 0x00, 0xDF },
	{ 0x00, 0xDF }, { 0x00, 0xE0 }, { 0x00, 0xE1 }, { 0x00, 0xE2 }, { 0x00, 0xE2 }, { 0x00, 0xE3 }, { 0x00, 0xE4 }, { 0x00, 0xE5 }, { 0x00, 0xE5 }, { 0x00, 0xE6 },
	{ 0x00, 0xE7 }, { 0x00, 0xE8 }, { 0x00, 0xE8 }, { 0x00, 0xE9 }, { 0x00, 0xEA }, { 0x00, 0xEB }, { 0x00, 0xEB }, { 0x00, 0xEC }, { 0x00, 0xED }, { 0x00, 0xEE },
	{ 0x00, 0xEF }, { 0x00, 0xEF }, { 0x00, 0xF0 }, { 0x00, 0xF1 }, { 0x00, 0xF2 }, { 0x00, 0xF2 }, { 0x00, 0xF3 }, { 0x00, 0xF4 }, { 0x00, 0xF5 }, { 0x00, 0xF5 },
	{ 0x00, 0xF6 }, { 0x00, 0xF7 }, { 0x00, 0xF8 }, { 0x00, 0xF8 }, { 0x00, 0xF9 }, { 0x00, 0xFA }, { 0x00, 0xFB }, { 0x00, 0xFC }, { 0x00, 0xFC }, { 0x00, 0xFD },
	{ 0x00, 0xFE }, { 0x00, 0xFF }, { 0x00, 0xFF }, { 0x01, 0x00 }, { 0x01, 0x01 }, { 0x01, 0x02 }, { 0x01, 0x03 }, { 0x01, 0x03 }, { 0x01, 0x04 }, { 0x01, 0x05 },
	{ 0x01, 0x06 }, { 0x01, 0x06 }, { 0x01, 0x07 }, { 0x01, 0x08 }, { 0x01, 0x09 }, { 0x01, 0x0A }, { 0x01, 0x0A }, { 0x01, 0x0B }, { 0x01, 0x0C }, { 0x01, 0x0D },
	{ 0x01, 0x0D }, { 0x01, 0x0E }, { 0x01, 0x0F }, { 0x01, 0x10 }, { 0x01, 0x11 }, { 0x01, 0x11 }, { 0x01, 0x12 }, { 0x01, 0x13 }, { 0x01, 0x14 }, { 0x01, 0x15 },
	{ 0x01, 0x15 }, { 0x01, 0x16 }, { 0x01, 0x17 }, { 0x01, 0x18 }, { 0x01, 0x18 }, { 0x01, 0x19 }, { 0x01, 0x1A }, { 0x01, 0x1B }, { 0x01, 0x1C }, { 0x01, 0x1C },
	{ 0x01, 0x1D }, { 0x01, 0x1E }, { 0x01, 0x1F }, { 0x01, 0x20 }, { 0x01, 0x20 }, { 0x01, 0x21 }, { 0x01, 0x22 }, { 0x01, 0x23 }, { 0x01, 0x24 }, { 0x01, 0x24 },
	{ 0x01, 0x25 }, { 0x01, 0x26 }, { 0x01, 0x27 }, { 0x01, 0x28 }, { 0x01, 0x28 }, { 0x01, 0x29 }, { 0x01, 0x2A }, { 0x01, 0x2B }, { 0x01, 0x2C }, { 0x01, 0x2C },
	{ 0x01, 0x2D }, { 0x01, 0x2E }, { 0x01, 0x2F }, { 0x01, 0x30 }, { 0x01, 0x30 }, { 0x01, 0x31 }, { 0x01, 0x32 }, { 0x01, 0x33 }, { 0x01, 0x34 }, { 0x01, 0x35 },
	{ 0x01, 0x35 }, { 0x01, 0x36 }, { 0x01, 0x37 }, { 0x01, 0x38 }, { 0x01, 0x39 }, { 0x01, 0x39 }, { 0x01, 0x3A }, { 0x01, 0x3B }, { 0x01, 0x3C }, { 0x01, 0x3D },
	{ 0x01, 0x3D }, { 0x01, 0x3E }, { 0x01, 0x3F }, { 0x01, 0x40 }, { 0x01, 0x41 }, { 0x01, 0x42 }, { 0x01, 0x42 }, { 0x01, 0x43 }, { 0x01, 0x44 }, { 0x01, 0x45 },
	{ 0x01, 0x46 }, { 0x01, 0x46 }, { 0x01, 0x47 }, { 0x01, 0x48 }, { 0x01, 0x49 }, { 0x01, 0x4A }, { 0x01, 0x4B }, { 0x01, 0x4B }, { 0x01, 0x4C }, { 0x01, 0x4D },
	{ 0x01, 0x4E }, { 0x01, 0x4F }, { 0x01, 0x50 }, { 0x01, 0x50 }, { 0x01, 0x51 }, { 0x01, 0x52 }, { 0x01, 0x53 }, { 0x01, 0x54 }, { 0x01, 0x55 }, { 0x01, 0x55 },
	{ 0x01, 0x56 }, { 0x01, 0x57 }, { 0x01, 0x58 }, { 0x01, 0x59 }, { 0x01, 0x59 }, { 0x01, 0x5A }, { 0x01, 0x5B }, { 0x01, 0x5C }, { 0x01, 0x5D }, { 0x01, 0x5E },
	{ 0x01, 0x5E }, { 0x01, 0x5F }, { 0x01, 0x60 }, { 0x01, 0x61 }, { 0x01, 0x62 }, { 0x01, 0x63 }, { 0x01, 0x64 }, { 0x01, 0x64 }, { 0x01, 0x65 }, { 0x01, 0x66 },
	{ 0x01, 0x67 }, { 0x01, 0x68 }, { 0x01, 0x69 }, { 0x01, 0x69 }, { 0x01, 0x6A }, { 0x01, 0x6B }, { 0x01, 0x6C }, { 0x01, 0x6D }, { 0x01, 0x6E }, { 0x01, 0x6E },
	{ 0x01, 0x6F }, { 0x01, 0x70 }, { 0x01, 0x71 }, { 0x01, 0x72 }, { 0x01, 0x73 }, { 0x01, 0x74 }, { 0x01, 0x74 }, { 0x01, 0x75 }, { 0x01, 0x76 }, { 0x01, 0x77 },
	{ 0x01, 0x78 }, { 0x01, 0x79 }, { 0x01, 0x79 }, { 0x01, 0x7A }, { 0x01, 0x7B }, { 0x01, 0x7C }, { 0x01, 0x7D }, { 0x01, 0x7E }, { 0x01, 0x7F }, { 0x01, 0x7F },
	{ 0x01, 0x80 }, { 0x01, 0x81 }, { 0x01, 0x82 }, { 0x01, 0x83 }, { 0x01, 0x84 }, { 0x01, 0x85 }, { 0x01, 0x85 }, { 0x01, 0x86 }, { 0x01, 0x87 }, { 0x01, 0x88 },
	{ 0x01, 0x89 }, { 0x01, 0x8A }, { 0x01, 0x8B }, { 0x01, 0x8B }, { 0x01, 0x8C }, { 0x01, 0x8D }, { 0x01, 0x8E }, { 0x01, 0x8F }, { 0x01, 0x90 }, { 0x01, 0x91 },
	{ 0x01, 0x91 }, { 0x01, 0x92 }, { 0x01, 0x93 }, { 0x01, 0x94 }, { 0x01, 0x95 }, { 0x01, 0x96 }, { 0x01, 0x97 }, { 0x01, 0x97 }, { 0x01, 0x98 }, { 0x01, 0x99 },
	{ 0x01, 0x9A }, { 0x01, 0x9B }, { 0x01, 0x9C }, { 0x01, 0x9D }, { 0x01, 0x9E }, { 0x01, 0x9E }, { 0x01, 0x9F }, { 0x01, 0xA0 }, { 0x01, 0xA1 }, { 0x01, 0xA2 },
	{ 0x01, 0xA3 }, { 0x01, 0xA4 }, { 0x01, 0xA5 }, { 0x01, 0xA5 }, { 0x01, 0xA6 }, { 0x01, 0xA7 }, { 0x01, 0xA8 }, { 0x01, 0xA9 }, { 0x01, 0xAA }, { 0x01, 0xAB },
	{ 0x01, 0xAC }, { 0x01, 0xAC }, { 0x01, 0xAD }, { 0x01, 0xAE }, { 0x01, 0xAF }, { 0x01, 0xB0 }, { 0x01, 0xB1 }, { 0x01, 0xB2 }, { 0x01, 0xB3 }, { 0x01, 0xB3 },
	{ 0x01, 0xB4 }, { 0x01, 0xB5 }, { 0x01, 0xB6 }, { 0x01, 0xB7 }, { 0x01, 0xB8 }, { 0x01, 0xB9 }, { 0x01, 0xBA }, { 0x01, 0xBA }, { 0x01, 0xBB }, { 0x01, 0xBC },
	{ 0x01, 0xBD }, { 0x01, 0xBE }, { 0x01, 0xBF }, { 0x01, 0xC0 }, { 0x01, 0xC1 }, { 0x01, 0xC2 }, { 0x01, 0xC2 }, { 0x01, 0xC3 }, { 0x01, 0xC4 }, { 0x01, 0xC5 },
	{ 0x01, 0xC6 }, { 0x01, 0xC7 }, { 0x01, 0xC8 }, { 0x01, 0xC9 }, { 0x01, 0xCA }, { 0x01, 0xCA }, { 0x01, 0xCB }, { 0x01, 0xCC }, { 0x01, 0xCD }, { 0x01, 0xCE },
	{ 0x01, 0xCF }, { 0x01, 0xD0 }, { 0x01, 0xD1 }, { 0x01, 0xD2 }, { 0x01, 0xD2 }, { 0x01, 0xD3 }, { 0x01, 0xD4 }, { 0x01, 0xD5 }, { 0x01, 0xD6 }, { 0x01, 0xD7 },
	{ 0x01, 0xD8 }, { 0x01, 0xD9 }, { 0x01, 0xDA }, { 0x01, 0xDA }, { 0x01, 0xDB }, { 0x01, 0xDC }, { 0x01, 0xDD }, { 0x01, 0xDE }, { 0x01, 0xDF }, { 0x01, 0xE0 },
	{ 0x01, 0xE1 }, { 0x01, 0xE2 }, { 0x01, 0xE3 }, { 0x01, 0xE3 }, { 0x01, 0xE4 }, { 0x01, 0xE5 }, { 0x01, 0xE6 }, { 0x01, 0xE7 }, { 0x01, 0xE8 }, { 0x01, 0xE9 },
	{ 0x01, 0xEA }, { 0x01, 0xEB }, { 0x01, 0xEC }, { 0x01, 0xED }, { 0x01, 0xED }, { 0x01, 0xEE }, { 0x01, 0xEF }, { 0x01, 0xF0 }, { 0x01, 0xF1 }, { 0x01, 0xF2 },
	{ 0x01, 0xF3 }, { 0x01, 0xF4 }, { 0x01, 0xF5 }, { 0x01, 0xF6 }, { 0x01, 0xF6 }, { 0x01, 0xF7 }, { 0x01, 0xF8 }, { 0x01, 0xF9 }, { 0x01, 0xFA }, { 0x01, 0xFB },
	{ 0x01, 0xFC }, { 0x01, 0xFD }, { 0x01, 0xFE }, { 0x01, 0xFF }, { 0x02, 0x00 }, { 0x02, 0x01 }, { 0x02, 0x01 }, { 0x02, 0x02 }, { 0x02, 0x03 }, { 0x02, 0x04 },
	{ 0x02, 0x05 }, { 0x02, 0x06 }, { 0x02, 0x07 }, { 0x02, 0x08 }, { 0x02, 0x09 }, { 0x02, 0x0A }, { 0x02, 0x0B }, { 0x02, 0x0C }, { 0x02, 0x0C }, { 0x02, 0x0D },
	{ 0x02, 0x0E }, { 0x02, 0x0F }, { 0x02, 0x10 }, { 0x02, 0x11 }, { 0x02, 0x12 }, { 0x02, 0x13 }, { 0x02, 0x14 }, { 0x02, 0x15 }, { 0x02, 0x16 }, { 0x02, 0x17 },
	{ 0x02, 0x17 }, { 0x02, 0x18 }, { 0x02, 0x19 }, { 0x02, 0x1A }, { 0x02, 0x1B }, { 0x02, 0x1C }, { 0x02, 0x1D }, { 0x02, 0x1E }, { 0x02, 0x1F }, { 0x02, 0x20 },
	{ 0x02, 0x21 }, { 0x02, 0x22 }, { 0x02, 0x23 }, { 0x02, 0x24 }, { 0x02, 0x24 }, { 0x02, 0x25 }, { 0x02, 0x26 }, { 0x02, 0x27 }, { 0x02, 0x28 }, { 0x02, 0x29 },
	{ 0x02, 0x2A }, { 0x02, 0x2B }, { 0x02, 0x2C }, { 0x02, 0x2D }, { 0x02, 0x2E }, { 0x02, 0x2F }, { 0x02, 0x30 }, { 0x02, 0x31 }, { 0x02, 0x31 }, { 0x02, 0x32 },
	{ 0x02, 0x33 }, { 0x02, 0x34 }, { 0x02, 0x35 }, { 0x02, 0x36 }, { 0x02, 0x37 }, { 0x02, 0x38 }, { 0x02, 0x39 }, { 0x02, 0x3A }, { 0x02, 0x3B }, { 0x02, 0x3C },
	{ 0x02, 0x3D }, { 0x02, 0x3E }, { 0x02, 0x3F }, { 0x02, 0x40 }, { 0x02, 0x40 }, { 0x02, 0x41 }, { 0x02, 0x42 }, { 0x02, 0x43 }, { 0x02, 0x44 }, { 0x02, 0x45 },
	{ 0x02, 0x46 }, { 0x02, 0x47 }, { 0x02, 0x48 }, { 0x02, 0x49 }, { 0x02, 0x4A }, { 0x02, 0x4B }, { 0x02, 0x4C }, { 0x02, 0x4D }, { 0x02, 0x4E }, { 0x02, 0x4F },
	{ 0x02, 0x50 }, { 0x02, 0x50 }, { 0x02, 0x51 }, { 0x02, 0x52 }, { 0x02, 0x53 }, { 0x02, 0x54 }, { 0x02, 0x55 }, { 0x02, 0x56 }, { 0x02, 0x57 }, { 0x02, 0x58 },
	{ 0x02, 0x59 }, { 0x02, 0x5A }, { 0x02, 0x5B }, { 0x02, 0x5C }, { 0x02, 0x5D }, { 0x02, 0x5E }, { 0x02, 0x5F }, { 0x02, 0x60 }, { 0x02, 0x61 }, { 0x02, 0x62 },
	{ 0x02, 0x62 }, { 0x02, 0x63 }, { 0x02, 0x64 }, { 0x02, 0x65 }, { 0x02, 0x66 }, { 0x02, 0x67 }, { 0x02, 0x68 }, { 0x02, 0x69 }, { 0x02, 0x6A }, { 0x02, 0x6B },
	{ 0x02, 0x6C }, { 0x02, 0x6D }, { 0x02, 0x6E }, { 0x02, 0x6F }, { 0x02, 0x70 }, { 0x02, 0x71 }, { 0x02, 0x72 }, { 0x02, 0x73 }, { 0x02, 0x74 }, { 0x02, 0x75 },
	{ 0x02, 0x76 }, { 0x02, 0x77 }, { 0x02, 0x78 }, { 0x02, 0x78 }, { 0x02, 0x79 }, { 0x02, 0x7A }, { 0x02, 0x7B }, { 0x02, 0x7C }, { 0x02, 0x7D }, { 0x02, 0x7E },
	{ 0x02, 0x7F }, { 0x02, 0x80 }, { 0x02, 0x81 }, { 0x02, 0x82 }, { 0x02, 0x83 }, { 0x02, 0x84 }, { 0x02, 0x85 }, { 0x02, 0x86 }, { 0x02, 0x87 }, { 0x02, 0x88 },
	{ 0x02, 0x89 }, { 0x02, 0x8A }, { 0x02, 0x8B }, { 0x02, 0x8C }, { 0x02, 0x8D }, { 0x02, 0x8E }, { 0x02, 0x8F }, { 0x02, 0x90 }, { 0x02, 0x91 }, { 0x02, 0x92 },
	{ 0x02, 0x93 }, { 0x02, 0x93 }, { 0x02, 0x94 }, { 0x02, 0x95 }, { 0x02, 0x96 }, { 0x02, 0x97 }, { 0x02, 0x98 }, { 0x02, 0x99 }, { 0x02, 0x9A }, { 0x02, 0x9B },
	{ 0x02, 0x9C }, { 0x02, 0x9D }, { 0x02, 0x9E }, { 0x02, 0x9F }, { 0x02, 0xA0 }, { 0x02, 0xA1 }, { 0x02, 0xA2 }, { 0x02, 0xA3 }, { 0x02, 0xA4 }, { 0x02, 0xA5 },
	{ 0x02, 0xA6 }, { 0x02, 0xA7 }, { 0x02, 0xA8 }, { 0x02, 0xA9 }, { 0x02, 0xAA }, { 0x02, 0xAB }, { 0x02, 0xAC }, { 0x02, 0xAD }, { 0x02, 0xAE }, { 0x02, 0xAF },
	{ 0x02, 0xB0 }, { 0x02, 0xB1 }, { 0x02, 0xB2 }, { 0x02, 0xB3 }, { 0x02, 0xB4 }, { 0x02, 0xB5 }, { 0x02, 0xB6 }, { 0x02, 0xB7 }, { 0x02, 0xB8 }, { 0x02, 0xB9 },
	{ 0x02, 0xBA }, { 0x02, 0xBB }, { 0x02, 0xBC }, { 0x02, 0xBC }, { 0x02, 0xBD }, { 0x02, 0xBE }, { 0x02, 0xBF }, { 0x02, 0xC0 }, { 0x02, 0xC1 }, { 0x02, 0xC2 },
	{ 0x02, 0xC3 }, { 0x02, 0xC4 }, { 0x02, 0xC5 }, { 0x02, 0xC6 }, { 0x02, 0xC7 }, { 0x02, 0xC8 }, { 0x02, 0xC9 }, { 0x02, 0xCA }, { 0x02, 0xCB }, { 0x02, 0xCC },
	{ 0x02, 0xCD }, { 0x02, 0xCE }, { 0x02, 0xCF }, { 0x02, 0xD0 }, { 0x02, 0xD1 }, { 0x02, 0xD2 }, { 0x02, 0xD3 }, { 0x02, 0xD4 }, { 0x02, 0xD5 }, { 0x02, 0xD6 },
	{ 0x02, 0xD7 }, { 0x02, 0xD8 }, { 0x02, 0xD9 }, { 0x02, 0xDA }, { 0x02, 0xDB }, { 0x02, 0xDC }, { 0x02, 0xDD }, { 0x02, 0xDE }, { 0x02, 0xDF }, { 0x02, 0xE0 },
	{ 0x02, 0xE1 }, { 0x02, 0xE2 }, { 0x02, 0xE3 }, { 0x02, 0xE4 }, { 0x02, 0xE5 }, { 0x02, 0xE6 }, { 0x02, 0xE7 }, { 0x02, 0xE8 }, { 0x02, 0xE9 }, { 0x02, 0xEA },
	{ 0x02, 0xEB }, { 0x02, 0xEC }, { 0x02, 0xED }, { 0x02, 0xEE }, { 0x02, 0xEF }, { 0x02, 0xF0 }, { 0x02, 0xF1 }, { 0x02, 0xF2 }, { 0x02, 0xF3 }, { 0x02, 0xF4 },
	{ 0x02, 0xF5 }, { 0x02, 0xF6 }, { 0x02, 0xF7 }, { 0x02, 0xF8 }, { 0x02, 0xF9 }, { 0x02, 0xFA }, { 0x02, 0xFB }, { 0x02, 0xFC }, { 0x02, 0xFD }, { 0x02, 0xFE },
	{ 0x02, 0xFF }, { 0x03, 0x00 }, { 0x03, 0x01 }, { 0x03, 0x02 }, { 0x03, 0x03 }, { 0x03, 0x04 }, { 0x03, 0x06 }, { 0x03, 0x07 }, { 0x03, 0x08 }, { 0x03, 0x09 },
	{ 0x03, 0x0A }, { 0x03, 0x0B }, { 0x03, 0x0C }, { 0x03, 0x0D }, { 0x03, 0x0E }, { 0x03, 0x0F }, { 0x03, 0x10 }, { 0x03, 0x11 }, { 0x03, 0x12 }, { 0x03, 0x13 },
	{ 0x03, 0x14 }, { 0x03, 0x15 }, { 0x03, 0x17 }, { 0x03, 0x18 }, { 0x03, 0x19 }, { 0x03, 0x1A }, { 0x03, 0x1B }, { 0x03, 0x1C }, { 0x03, 0x1D }, { 0x03, 0x1E },
	{ 0x03, 0x1F }, { 0x03, 0x20 }, { 0x03, 0x21 }, { 0x03, 0x22 }, { 0x03, 0x23 }, { 0x03, 0x24 }, { 0x03, 0x25 }, { 0x03, 0x27 }, { 0x03, 0x28 }, { 0x03, 0x29 },
	{ 0x03, 0x2A }, { 0x03, 0x2B }, { 0x03, 0x2C }, { 0x03, 0x2D }, { 0x03, 0x2E }, { 0x03, 0x2F }, { 0x03, 0x30 }, { 0x03, 0x31 }, { 0x03, 0x32 }, { 0x03, 0x33 },
	{ 0x03, 0x34 }, { 0x03, 0x36 }, { 0x03, 0x37 }, { 0x03, 0x38 }, { 0x03, 0x39 }, { 0x03, 0x3A }, { 0x03, 0x3B }, { 0x03, 0x3C }, { 0x03, 0x3D }, { 0x03, 0x3E },
	{ 0x03, 0x3F }, { 0x03, 0x40 }, { 0x03, 0x41 }, { 0x03, 0x42 }, { 0x03, 0x44 }, { 0x03, 0x45 }, { 0x03, 0x46 }, { 0x03, 0x47 }, { 0x03, 0x48 }, { 0x03, 0x49 },
	{ 0x03, 0x4A }, { 0x03, 0x4B }, { 0x03, 0x4C }, { 0x03, 0x4D }, { 0x03, 0x4E }, { 0x03, 0x4F }, { 0x03, 0x50 }, { 0x03, 0x52 }, { 0x03, 0x53 }, { 0x03, 0x54 },
	{ 0x03, 0x55 }, { 0x03, 0x56 }, { 0x03, 0x57 }, { 0x03, 0x58 }, { 0x03, 0x59 }, { 0x03, 0x5A }, { 0x03, 0x5B }, { 0x03, 0x5C }, { 0x03, 0x5D }, { 0x03, 0x5F },
	{ 0x03, 0x60 }, { 0x03, 0x61 }, { 0x03, 0x62 }, { 0x03, 0x63 }, { 0x03, 0x64 }, { 0x03, 0x65 }, { 0x03, 0x66 }, { 0x03, 0x67 }, { 0x03, 0x68 }, { 0x03, 0x69 },
	{ 0x03, 0x6B }, { 0x03, 0x6C }, { 0x03, 0x6D }, { 0x03, 0x6E }, { 0x03, 0x6F }, { 0x03, 0x70 }, { 0x03, 0x71 }, { 0x03, 0x72 }, { 0x03, 0x73 }, { 0x03, 0x74 },
	{ 0x03, 0x75 }, { 0x03, 0x77 }, { 0x03, 0x78 }, { 0x03, 0x79 }, { 0x03, 0x7A }, { 0x03, 0x7B }, { 0x03, 0x7C }, { 0x03, 0x7D }, { 0x03, 0x7E }, { 0x03, 0x7F },
	{ 0x03, 0x80 }, { 0x03, 0x81 }, { 0x03, 0x83 }, { 0x03, 0x84 }, { 0x03, 0x85 }, { 0x03, 0x86 }, { 0x03, 0x87 }, { 0x03, 0x88 }, { 0x03, 0x89 }, { 0x03, 0x8A },
	{ 0x03, 0x8B }, { 0x03, 0x8C }, { 0x03, 0x8E }, { 0x03, 0x8F }, { 0x03, 0x90 }, { 0x03, 0x91 }, { 0x03, 0x92 }, { 0x03, 0x93 }, { 0x03, 0x94 }, { 0x03, 0x95 },
	{ 0x03, 0x96 }, { 0x03, 0x97 }, { 0x03, 0x99 }, { 0x03, 0x9A }, { 0x03, 0x9B }, { 0x03, 0x9C }, { 0x03, 0x9D }, { 0x03, 0x9E }, { 0x03, 0x9F }, { 0x03, 0xA0 },
	{ 0x03, 0xA1 }, { 0x03, 0xA2 }, { 0x03, 0xA4 }, { 0x03, 0xA5 }, { 0x03, 0xA6 }, { 0x03, 0xA7 }, { 0x03, 0xA8 }, { 0x03, 0xA9 }, { 0x03, 0xAA }, { 0x03, 0xAB },
	{ 0x03, 0xAC }, { 0x03, 0xAE }, { 0x03, 0xAF }, { 0x03, 0xB0 }, { 0x03, 0xB1 }, { 0x03, 0xB2 }, { 0x03, 0xB3 }, { 0x03, 0xB4 }, { 0x03, 0xB5 }, { 0x03, 0xB6 },
	{ 0x03, 0xB7 }, { 0x03, 0xB9 }, { 0x03, 0xBA }, { 0x03, 0xBB }, { 0x03, 0xBC }, { 0x03, 0xBD }, { 0x03, 0xBE }, { 0x03, 0xBF }, { 0x03, 0xC0 }, { 0x03, 0xC1 },
	{ 0x03, 0xC3 }, { 0x03, 0xC4 }, { 0x03, 0xC5 }, { 0x03, 0xC6 }, { 0x03, 0xC7 }, { 0x03, 0xC8 }, { 0x03, 0xC9 }, { 0x03, 0xCA }, { 0x03, 0xCB }, { 0x03, 0xCD },
	{ 0x03, 0xCE }, { 0x03, 0xCF }, { 0x03, 0xD0 }, { 0x03, 0xD1 }, { 0x03, 0xD2 }, { 0x03, 0xD3 }, { 0x03, 0xD4 }, { 0x03, 0xD6 }, { 0x03, 0xD7 }, { 0x03, 0xD8 },
	{ 0x03, 0xD9 }, { 0x03, 0xDA }, { 0x03, 0xDB }, { 0x03, 0xDC }, { 0x03, 0xDD }, { 0x03, 0xDE }, { 0x03, 0xE0 }, { 0x03, 0xE1 }, { 0x03, 0xE2 }, { 0x03, 0xE3 },
	{ 0x03, 0xE4 }, { 0x03, 0xE5 }, { 0x03, 0xE6 }, { 0x03, 0xE7 }, { 0x03, 0xE9 }, { 0x03, 0xEA }, { 0x03, 0xEB }, { 0x03, 0xEC }, { 0x03, 0xED }, { 0x03, 0xEE },
	{ 0x03, 0xEF }, { 0x03, 0xF0 }, { 0x03, 0xF2 }, { 0x03, 0xF3 }, { 0x03, 0xF4 }, { 0x03, 0xF5 }, { 0x03, 0xF6 }, { 0x03, 0xF7 }, { 0x03, 0xF8 }, { 0x03, 0xF9 },
	{ 0x03, 0xFB }, { 0x03, 0xFC }, { 0x03, 0xFD }, { 0x03, 0xFE }, { 0x03, 0xFF }, { 0x04, 0x00 }, { 0x04, 0x01 }, { 0x04, 0x02 }, { 0x04, 0x04 }, { 0x04, 0x05 },
	{ 0x04, 0x06 }, { 0x04, 0x07 }, { 0x04, 0x08 }, { 0x04, 0x09 }, { 0x04, 0x0A }, { 0x04, 0x0B }, { 0x04, 0x0D }, { 0x04, 0x0E }, { 0x04, 0x0F }, { 0x04, 0x10 },
	{ 0x04, 0x11 }, { 0x04, 0x12 }, { 0x04, 0x13 }, { 0x04, 0x15 }, { 0x04, 0x16 }, { 0x04, 0x17 }, { 0x04, 0x18 }, { 0x04, 0x19 }, { 0x04, 0x1A }, { 0x04, 0x1B },
	{ 0x04, 0x1C }, { 0x04, 0x1E }, { 0x04, 0x1F }, { 0x04, 0x20 }, { 0x04, 0x21 }, { 0x04, 0x22 }, { 0x04, 0x23 }, { 0x04, 0x24 }, { 0x04, 0x26 }, { 0x04, 0x27 },
	{ 0x04, 0x28 }, { 0x04, 0x29 }, { 0x04, 0x2A }, { 0x04, 0x2B }, { 0x04, 0x2C }, { 0x04, 0x2E }, { 0x04, 0x2F }, { 0x04, 0x30 }, { 0x04, 0x31 }, { 0x04, 0x32 },
	{ 0x04, 0x33 }, { 0x04, 0x34 }, { 0x04, 0x36 }, { 0x04, 0x37 }, { 0x04, 0x38 }, { 0x04, 0x39 }, { 0x04, 0x3A }, { 0x04, 0x3B }, { 0x04, 0x3C }, { 0x04, 0x3E },
	{ 0x04, 0x3F }, { 0x04, 0x40 }, { 0x04, 0x41 }, { 0x04, 0x42 }, { 0x04, 0x43 }, { 0x04, 0x44 }, { 0x04, 0x46 }, { 0x04, 0x47 }, { 0x04, 0x48 }, { 0x04, 0x49 },
	{ 0x04, 0x4A }, { 0x04, 0x4B }, { 0x04, 0x4C }, { 0x04, 0x4E }, { 0x04, 0x4F }, { 0x04, 0x50 }, { 0x04, 0x51 }, { 0x04, 0x52 }, { 0x04, 0x53 }, { 0x04, 0x54 },
	{ 0x04, 0x56 }, { 0x04, 0x57 }, { 0x04, 0x58 }, { 0x04, 0x59 }, { 0x04, 0x5A }, { 0x04, 0x5B }, { 0x04, 0x5C }, { 0x04, 0x5E }, { 0x04, 0x5F }, { 0x04, 0x60 },
	{ 0x04, 0x61 }, { 0x04, 0x62 }, { 0x04, 0x63 }, { 0x04, 0x65 }, { 0x04, 0x66 }, { 0x04, 0x67 }, { 0x04, 0x68 }, { 0x04, 0x69 }, { 0x04, 0x6A }, { 0x04, 0x6B },
	{ 0x04, 0x6D }, { 0x04, 0x6E }, { 0x04, 0x6F }, { 0x04, 0x70 }, { 0x04, 0x71 }, { 0x04, 0x72 }, { 0x04, 0x74 }, { 0x04, 0x75 }, { 0x04, 0x76 }, { 0x04, 0x77 },
	{ 0x04, 0x78 }, { 0x04, 0x79 }, { 0x04, 0x7A }, { 0x04, 0x7C }, { 0x04, 0x7D }, { 0x04, 0x7E }, { 0x04, 0x7F }, { 0x04, 0x80 }, { 0x04, 0x81 }, { 0x04, 0x83 },
	{ 0x04, 0x84 }, { 0x04, 0x85 }, { 0x04, 0x86 }, { 0x04, 0x87 }, { 0x04, 0x88 }, { 0x04, 0x8A }, { 0x04, 0x8B }, { 0x04, 0x8C }, { 0x04, 0x8D }, { 0x04, 0x8E },
	{ 0x04, 0x8F }, { 0x04, 0x90 }, { 0x04, 0x92 }, { 0x04, 0x93 }, { 0x04, 0x94 }, { 0x04, 0x95 }, { 0x04, 0x96 }, { 0x04, 0x97 }, { 0x04, 0x99 }, { 0x04, 0x9A },
	{ 0x04, 0x9B }, { 0x04, 0x9C }, { 0x04, 0x9D }, { 0x04, 0x9E }, { 0x04, 0xA0 }, { 0x04, 0xA1 }, { 0x04, 0xA2 }, { 0x04, 0xA3 }, { 0x04, 0xA4 }, { 0x04, 0xA5 },
	{ 0x04, 0xA7 }, { 0x04, 0xA8 }, { 0x04, 0xA9 }, { 0x04, 0xAA }, { 0x04, 0xAB }, { 0x04, 0xAC }, { 0x04, 0xAE }, { 0x04, 0xAF }, { 0x04, 0xB0 }, { 0x04, 0xB1 },
	{ 0x04, 0xB2 }, { 0x04, 0xB3 }, { 0x04, 0xB5 }, { 0x04, 0xB6 }, { 0x04, 0xB7 }, { 0x04, 0xB8 }, { 0x04, 0xB9 }, { 0x04, 0xBA }, { 0x04, 0xBC }, { 0x04, 0xBD },
	{ 0x04, 0xBE }, { 0x04, 0xBF }, { 0x04, 0xC0 }, { 0x04, 0xC2 }, { 0x04, 0xC3 }, { 0x04, 0xC4 }, { 0x04, 0xC5 }, { 0x04, 0xC6 }, { 0x04, 0xC7 }, { 0x04, 0xC9 },
	{ 0x04, 0xCA }, { 0x04, 0xCB }, { 0x04, 0xCC }, { 0x04, 0xCD }, { 0x04, 0xCE }, { 0x04, 0xD0 }, { 0x04, 0xD1 }, { 0x04, 0xD2 }, { 0x04, 0xD3 }, { 0x04, 0xD4 },
	{ 0x04, 0xD5 }, { 0x04, 0xD7 }, { 0x04, 0xD8 }, { 0x04, 0xD9 }, { 0x04, 0xDA }, { 0x04, 0xDB }, { 0x04, 0xDD }, { 0x04, 0xDE }, { 0x04, 0xDF }, { 0x04, 0xE0 },
	{ 0x04, 0xE1 }, { 0x04, 0xE2 }, { 0x04, 0xE4 }, { 0x04, 0xE5 }, { 0x04, 0xE6 }, { 0x04, 0xE7 }, { 0x04, 0xE8 }, { 0x04, 0xEA }, { 0x04, 0xEB }, { 0x04, 0xEC },
	{ 0x04, 0xED }, { 0x04, 0xEE }, { 0x04, 0xEF }, { 0x04, 0xF1 }, { 0x04, 0xF2 }, { 0x04, 0xF3 }, { 0x04, 0xF4 }, { 0x04, 0xF5 }, { 0x04, 0xF7 }, { 0x04, 0xF8 },
	{ 0x04, 0xF9 }, { 0x04, 0xFA }, { 0x04, 0xFB }, { 0x04, 0xFC }, { 0x04, 0xFE }, { 0x04, 0xFF }, { 0x05, 0x00 }, { 0x05, 0x01 }, { 0x05, 0x02 }, { 0x05, 0x04 },
	{ 0x05, 0x05 }, { 0x05, 0x06 }, { 0x05, 0x07 }, { 0x05, 0x08 }, { 0x05, 0x0A }, { 0x05, 0x0B }, { 0x05, 0x0C }, { 0x05, 0x0D }, { 0x05, 0x0E }, { 0x05, 0x0F },
	{ 0x05, 0x11 }, { 0x05, 0x12 }, { 0x05, 0x13 }, { 0x05, 0x14 }, { 0x05, 0x15 }, { 0x05, 0x17 }, { 0x05, 0x18 }, { 0x05, 0x19 }, { 0x05, 0x1A }, { 0x05, 0x1B },
	{ 0x05, 0x1D }, { 0x05, 0x1E }, { 0x05, 0x1F }, { 0x05, 0x20 }, { 0x05, 0x21 }, { 0x05, 0x23 }, { 0x05, 0x24 }, { 0x05, 0x25 }, { 0x05, 0x26 }, { 0x05, 0x27 },
	{ 0x05, 0x28 }, { 0x05, 0x2A }, { 0x05, 0x2B }, { 0x05, 0x2C }, { 0x05, 0x2D }, { 0x05, 0x2E }, { 0x05, 0x30 }, { 0x05, 0x31 }, { 0x05, 0x32 }, { 0x05, 0x33 },
	{ 0x05, 0x34 }, { 0x05, 0x36 }, { 0x05, 0x37 }, { 0x05, 0x38 }, { 0x05, 0x39 }, { 0x05, 0x3A }, { 0x05, 0x3C }, { 0x05, 0x3D }, { 0x05, 0x3E }, { 0x05, 0x3F },
	{ 0x05, 0x40 }, { 0x05, 0x42 }, { 0x05, 0x43 }, { 0x05, 0x44 }, { 0x05, 0x45 }, { 0x05, 0x46 }, { 0x05, 0x48 }, { 0x05, 0x49 }, { 0x05, 0x4A }, { 0x05, 0x4B },
	{ 0x05, 0x4C }, { 0x05, 0x4E }, { 0x05, 0x4F }, { 0x05, 0x50 }, { 0x05, 0x51 }, { 0x05, 0x52 }, { 0x05, 0x54 }, { 0x05, 0x55 }, { 0x05, 0x56 }, { 0x05, 0x57 },
	{ 0x05, 0x58 }, { 0x05, 0x5A }, { 0x05, 0x5B }, { 0x05, 0x5C }, { 0x05, 0x5D }, { 0x05, 0x5E }, { 0x05, 0x60 }, { 0x05, 0x61 }, { 0x05, 0x62 }, { 0x05, 0x63 },
	{ 0x05, 0x65 }, { 0x05, 0x66 }, { 0x05, 0x67 }, { 0x05, 0x68 }, { 0x05, 0x69 }, { 0x05, 0x6B }, { 0x05, 0x6C }, { 0x05, 0x6D }, { 0x05, 0x6E }, { 0x05, 0x6F },
	{ 0x05, 0x71 }, { 0x05, 0x72 }, { 0x05, 0x73 }, { 0x05, 0x74 }, { 0x05, 0x75 }, { 0x05, 0x77 }, { 0x05, 0x78 }, { 0x05, 0x79 }, { 0x05, 0x7A }, { 0x05, 0x7B },
	{ 0x05, 0x7D }, { 0x05, 0x7E }, { 0x05, 0x7F }, { 0x05, 0x80 }, { 0x05, 0x82 }, { 0x05, 0x83 }, { 0x05, 0x84 }, { 0x05, 0x85 }, { 0x05, 0x86 }, { 0x05, 0x88 },
	{ 0x05, 0x89 }, { 0x05, 0x8A }, { 0x05, 0x8B }, { 0x05, 0x8C }, { 0x05, 0x8E }, { 0x05, 0x8F }, { 0x05, 0x90 }, { 0x05, 0x91 }, { 0x05, 0x93 }, { 0x05, 0x94 },
	{ 0x05, 0x95 }, { 0x05, 0x96 }, { 0x05, 0x97 }, { 0x05, 0x99 }, { 0x05, 0x9A }, { 0x05, 0x9B }, { 0x05, 0x9C }, { 0x05, 0x9D }, { 0x05, 0x9F }, { 0x05, 0xA0 },
	{ 0x05, 0xA1 }, { 0x05, 0xA2 }, { 0x05, 0xA4 }, { 0x05, 0xA5 }, { 0x05, 0xA6 }, { 0x05, 0xA7 }, { 0x05, 0xA8 }, { 0x05, 0xAA }, { 0x05, 0xAB }, { 0x05, 0xAC },
	{ 0x05, 0xAD }, { 0x05, 0xAF }, { 0x05, 0xB0 }, { 0x05, 0xB1 }, { 0x05, 0xB2 }, { 0x05, 0xB3 }, { 0x05, 0xB5 }, { 0x05, 0xB6 }, { 0x05, 0xB7 }, { 0x05, 0xB8 },
	{ 0x05, 0xBA }, { 0x05, 0xBB }, { 0x05, 0xBC }, { 0x05, 0xBD }, { 0x05, 0xBE }, { 0x05, 0xC0 }, { 0x05, 0xC1 }, { 0x05, 0xC2 }, { 0x05, 0xC3 }, { 0x05, 0xC5 },
	{ 0x05, 0xC6 }, { 0x05, 0xC7 }, { 0x05, 0xC8 }, { 0x05, 0xC9 }, { 0x05, 0xCB }, { 0x05, 0xCC }, { 0x05, 0xCD }, { 0x05, 0xCE }, { 0x05, 0xD0 }, { 0x05, 0xD1 },
	{ 0x05, 0xD2 }, { 0x05, 0xD3 }, { 0x05, 0xD4 }, { 0x05, 0xD6 }, { 0x05, 0xD7 }, { 0x05, 0xD8 }, { 0x05, 0xD9 }, { 0x05, 0xDB }, { 0x05, 0xDC }, { 0x05, 0xDD },
	{ 0x05, 0xDE }, { 0x05, 0xE0 }, { 0x05, 0xE1 }, { 0x05, 0xE2 }, { 0x05, 0xE3 }, { 0x05, 0xE4 }, { 0x05, 0xE6 }, { 0x05, 0xE7 }, { 0x05, 0xE8 }, { 0x05, 0xE9 },
	{ 0x05, 0xEB }, { 0x05, 0xEC }, { 0x05, 0xED }, { 0x05, 0xEE }, { 0x05, 0xF0 }, { 0x05, 0xF1 }, { 0x05, 0xF2 }, { 0x05, 0xF3 }, { 0x05, 0xF4 }, { 0x05, 0xF6 },
	{ 0x05, 0xF7 }, { 0x05, 0xF8 }, { 0x05, 0xF9 }, { 0x05, 0xFB }, { 0x05, 0xFC }, { 0x05, 0xFD }, { 0x05, 0xFE }, { 0x06, 0x00 }, { 0x06, 0x01 }, { 0x06, 0x02 },
	{ 0x06, 0x03 }, { 0x06, 0x05 }, { 0x06, 0x06 }, { 0x06, 0x07 }, { 0x06, 0x08 }, { 0x06, 0x09 }, { 0x06, 0x0B }, { 0x06, 0x0C }, { 0x06, 0x0D }, { 0x06, 0x0E },
	{ 0x06, 0x10 }, { 0x06, 0x11 }, { 0x06, 0x12 }, { 0x06, 0x13 }, { 0x06, 0x15 }, { 0x06, 0x16 }, { 0x06, 0x17 }, { 0x06, 0x18 }, { 0x06, 0x1A }, { 0x06, 0x1B },
	{ 0x06, 0x1C }, { 0x06, 0x1D }, { 0x06, 0x1F }, { 0x06, 0x20 }, { 0x06, 0x21 }, { 0x06, 0x22 }, { 0x06, 0x24 }, { 0x06, 0x25 }, { 0x06, 0x26 }, { 0x06, 0x27 },
	{ 0x06, 0x29 }, { 0x06, 0x2A }, { 0x06, 0x2B }, { 0x06, 0x2C }, { 0x06, 0x2D }, { 0x06, 0x2F }, { 0x06, 0x30 }, { 0x06, 0x31 }, { 0x06, 0x32 }, { 0x06, 0x34 },
	{ 0x06, 0x35 }, { 0x06, 0x36 }, { 0x06, 0x37 }, { 0x06, 0x39 }, { 0x06, 0x3A }, { 0x06, 0x3B }, { 0x06, 0x3C }, { 0x06, 0x3E }, { 0x06, 0x3F }, { 0x06, 0x40 },
	{ 0x06, 0x41 }, { 0x06, 0x43 }, { 0x06, 0x44 }, { 0x06, 0x45 }, { 0x06, 0x46 }, { 0x06, 0x48 }, { 0x06, 0x49 }, { 0x06, 0x4A }, { 0x06, 0x4B }, { 0x06, 0x4D },
	{ 0x06, 0x4E }, { 0x06, 0x4F }, { 0x06, 0x50 }, { 0x06, 0x52 }, { 0x06, 0x53 }, { 0x06, 0x54 }, { 0x06, 0x55 }, { 0x06, 0x57 }, { 0x06, 0x58 }, { 0x06, 0x59 },
	{ 0x06, 0x5A }, { 0x06, 0x5C }, { 0x06, 0x5D }, { 0x06, 0x5E }, { 0x06, 0x5F }, { 0x06, 0x61 }, { 0x06, 0x62 }, { 0x06, 0x63 }, { 0x06, 0x64 }, { 0x06, 0x66 },
	{ 0x06, 0x67 }, { 0x06, 0x68 }, { 0x06, 0x69 }, { 0x06, 0x6B }, { 0x06, 0x6C }, { 0x06, 0x6D }, { 0x06, 0x6E }, { 0x06, 0x70 }, { 0x06, 0x71 }, { 0x06, 0x72 },
	{ 0x06, 0x73 }, { 0x06, 0x75 }, { 0x06, 0x76 }, { 0x06, 0x77 }, { 0x06, 0x79 }, { 0x06, 0x7A }, { 0x06, 0x7B }, { 0x06, 0x7C }, { 0x06, 0x7E }, { 0x06, 0x7F },
	{ 0x06, 0x80 }, { 0x06, 0x81 }, { 0x06, 0x83 }, { 0x06, 0x84 }, { 0x06, 0x85 }, { 0x06, 0x86 }, { 0x06, 0x88 }, { 0x06, 0x89 }, { 0x06, 0x8A }, { 0x06, 0x8B },
	{ 0x06, 0x8D }, { 0x06, 0x8E }, { 0x06, 0x8F }, { 0x06, 0x90 }, { 0x06, 0x92 }, { 0x06, 0x93 }, { 0x06, 0x94 }, { 0x06, 0x95 }, { 0x06, 0x97 }, { 0x06, 0x98 },
	{ 0x06, 0x99 }, { 0x06, 0x9B }, { 0x06, 0x9C }, { 0x06, 0x9D }, { 0x06, 0x9E }, { 0x06, 0xA0 }, { 0x06, 0xA1 }, { 0x06, 0xA2 }, { 0x06, 0xA3 }, { 0x06, 0xA5 },
	{ 0x06, 0xA6 }, { 0x06, 0xA7 }, { 0x06, 0xA8 }, { 0x06, 0xAA }, { 0x06, 0xAB }, { 0x06, 0xAC }, { 0x06, 0xAE }, { 0x06, 0xAF }, { 0x06, 0xB0 }, { 0x06, 0xB1 },
	{ 0x06, 0xB3 }, { 0x06, 0xB4 }, { 0x06, 0xB5 }, { 0x06, 0xB6 }, { 0x06, 0xB8 }, { 0x06, 0xB9 }, { 0x06, 0xBA }, { 0x06, 0xBB }, { 0x06, 0xBD }, { 0x06, 0xBE },
	{ 0x06, 0xBF }, { 0x06, 0xC1 }, { 0x06, 0xC2 }, { 0x06, 0xC3 }, { 0x06, 0xC4 }, { 0x06, 0xC6 }, { 0x06, 0xC7 }, { 0x06, 0xC8 }, { 0x06, 0xC9 }, { 0x06, 0xCB },
	{ 0x06, 0xCC }, { 0x06, 0xCD }, { 0x06, 0xCF }, { 0x06, 0xD0 }, { 0x06, 0xD1 }, { 0x06, 0xD2 }, { 0x06, 0xD4 }, { 0x06, 0xD5 }, { 0x06, 0xD6 }, { 0x06, 0xD7 },
	{ 0x06, 0xD9 }, { 0x06, 0xDA }, { 0x06, 0xDB }, { 0x06, 0xDD }, { 0x06, 0xDE }, { 0x06, 0xDF }, { 0x06, 0xE0 }, { 0x06, 0xE2 }, { 0x06, 0xE3 }, { 0x06, 0xE4 },
	{ 0x06, 0xE5 }, { 0x06, 0xE7 }, { 0x06, 0xE8 }, { 0x06, 0xE9 }, { 0x06, 0xEB }, { 0x06, 0xEC }, { 0x06, 0xED }, { 0x06, 0xEE }, { 0x06, 0xF0 }, { 0x06, 0xF1 },
	{ 0x06, 0xF2 }, { 0x06, 0xF3 }, { 0x06, 0xF5 }, { 0x06, 0xF6 }, { 0x06, 0xF7 }, { 0x06, 0xF9 }, { 0x06, 0xFA }, { 0x06, 0xFB }, { 0x06, 0xFC }, { 0x06, 0xFE },
	{ 0x06, 0xFF }, { 0x07, 0x00 }, { 0x07, 0x02 }, { 0x07, 0x03 }, { 0x07, 0x04 }, { 0x07, 0x05 }, { 0x07, 0x07 }, { 0x07, 0x08 }, { 0x07, 0x09 }, { 0x07, 0x0B },
	{ 0x07, 0x0C }, { 0x07, 0x0D }, { 0x07, 0x0E }, { 0x07, 0x10 }, { 0x07, 0x11 }, { 0x07, 0x12 }, { 0x07, 0x13 }, { 0x07, 0x15 }, { 0x07, 0x16 }, { 0x07, 0x17 },
	{ 0x07, 0x19 }, { 0x07, 0x1A }, { 0x07, 0x1B }, { 0x07, 0x1C }, { 0x07, 0x1E }, { 0x07, 0x1F }, { 0x07, 0x20 }, { 0x07, 0x22 }, { 0x07, 0x23 }, { 0x07, 0x24 },
	{ 0x07, 0x25 }, { 0x07, 0x27 }, { 0x07, 0x28 }, { 0x07, 0x29 }, { 0x07, 0x2B }, { 0x07, 0x2C }, { 0x07, 0x2D }, { 0x07, 0x2E }, { 0x07, 0x30 }, { 0x07, 0x31 },
	{ 0x07, 0x32 }, { 0x07, 0x34 }, { 0x07, 0x35 }, { 0x07, 0x36 }, { 0x07, 0x37 }, { 0x07, 0x39 }, { 0x07, 0x3A }, { 0x07, 0x3B }, { 0x07, 0x3D }, { 0x07, 0x3E },
	{ 0x07, 0x3F }, { 0x07, 0x41 }, { 0x07, 0x42 }, { 0x07, 0x43 }, { 0x07, 0x44 }, { 0x07, 0x46 }, { 0x07, 0x47 }, { 0x07, 0x48 }, { 0x07, 0x4A }, { 0x07, 0x4B },
	{ 0x07, 0x4C }, { 0x07, 0x4D }, { 0x07, 0x4F }, { 0x07, 0x50 }, { 0x07, 0x51 }, { 0x07, 0x53 }, { 0x07, 0x54 }, { 0x07, 0x55 }, { 0x07, 0x56 }, { 0x07, 0x58 },
	{ 0x07, 0x59 }, { 0x07, 0x5A }, { 0x07, 0x5C }, { 0x07, 0x5D }, { 0x07, 0x5E }, { 0x07, 0x60 }, { 0x07, 0x61 }, { 0x07, 0x62 }, { 0x07, 0x63 }, { 0x07, 0x65 },
	{ 0x07, 0x66 }, { 0x07, 0x67 }, { 0x07, 0x69 }, { 0x07, 0x6A }, { 0x07, 0x6B }, { 0x07, 0x6C }, { 0x07, 0x6E }, { 0x07, 0x6F }, { 0x07, 0x70 }, { 0x07, 0x72 },
	{ 0x07, 0x73 }, { 0x07, 0x74 }, { 0x07, 0x76 }, { 0x07, 0x77 }, { 0x07, 0x78 }, { 0x07, 0x79 }, { 0x07, 0x7B }, { 0x07, 0x7C }, { 0x07, 0x7D }, { 0x07, 0x7F },
	{ 0x07, 0x80 }, { 0x07, 0x81 }, { 0x07, 0x83 }, { 0x07, 0x84 }, { 0x07, 0x85 }, { 0x07, 0x86 }, { 0x07, 0x88 }, { 0x07, 0x89 }, { 0x07, 0x8A }, { 0x07, 0x8C },
	{ 0x07, 0x8D }, { 0x07, 0x8E }, { 0x07, 0x90 }, { 0x07, 0x91 }, { 0x07, 0x92 }, { 0x07, 0x93 }, { 0x07, 0x95 }, { 0x07, 0x96 }, { 0x07, 0x97 }, { 0x07, 0x99 },
	{ 0x07, 0x9A }, { 0x07, 0x9B }, { 0x07, 0x9D }, { 0x07, 0x9E }, { 0x07, 0x9F }, { 0x07, 0xA1 }, { 0x07, 0xA2 }, { 0x07, 0xA3 }, { 0x07, 0xA4 }, { 0x07, 0xA6 },
	{ 0x07, 0xA7 }, { 0x07, 0xA8 }, { 0x07, 0xAA }, { 0x07, 0xAB }, { 0x07, 0xAC }, { 0x07, 0xAE }, { 0x07, 0xAF }, { 0x07, 0xB0 }, { 0x07, 0xB2 }, { 0x07, 0xB3 },
	{ 0x07, 0xB4 }, { 0x07, 0xB5 }, { 0x07, 0xB7 }, { 0x07, 0xB8 }, { 0x07, 0xB9 }, { 0x07, 0xBB }, { 0x07, 0xBC }, { 0x07, 0xBD }, { 0x07, 0xBF }, { 0x07, 0xC0 },
	{ 0x07, 0xC1 }, { 0x07, 0xC3 }, { 0x07, 0xC4 }, { 0x07, 0xC5 }, { 0x07, 0xC6 }, { 0x07, 0xC8 }, { 0x07, 0xC9 }, { 0x07, 0xCA }, { 0x07, 0xCC }, { 0x07, 0xCD },
	{ 0x07, 0xCE }, { 0x07, 0xD0 }, { 0x07, 0xD1 }, { 0x07, 0xD2 }, { 0x07, 0xD4 }, { 0x07, 0xD5 }, { 0x07, 0xD6 }, { 0x07, 0xD8 }, { 0x07, 0xD9 }, { 0x07, 0xDA },
	{ 0x07, 0xDB }, { 0x07, 0xDD }, { 0x07, 0xDE }, { 0x07, 0xDF }, { 0x07, 0xE1 }, { 0x07, 0xE2 }, { 0x07, 0xE3 }, { 0x07, 0xE5 }, { 0x07, 0xE6 }, { 0x07, 0xE7 },
	{ 0x07, 0xE9 }, { 0x07, 0xEA }, { 0x07, 0xEB }, { 0x07, 0xED }, { 0x07, 0xEE }, { 0x07, 0xEF }, { 0x07, 0xF1 }, { 0x07, 0xF2 }, { 0x07, 0xF3 }, { 0x07, 0xF4 },
	{ 0x07, 0xF6 }, { 0x07, 0xF7 }, { 0x07, 0xF8 }, { 0x07, 0xFA }, { 0x07, 0xFB }, { 0x07, 0xFC }, { 0x07, 0xFE }, { 0x07, 0xFF }, { 0x00, 0x0B }, { 0x00, 0x28 },
	{ 0x00, 0x44 }, { 0x00, 0x61 }, { 0x00, 0x7D }, { 0x00, 0x99 }, { 0x00, 0xB6 }, { 0x00, 0xD2 }, { 0x00, 0xEF }, { 0x01, 0x0B }, { 0x01, 0x28 }, { 0x01, 0x44 },
	{ 0x01, 0x61 }, { 0x01, 0x7D }, { 0x01, 0x9A }, { 0x01, 0xB6 }, { 0x01, 0xD3 }, { 0x01, 0xEF }, { 0x02, 0x0B }, { 0x02, 0x28 }, { 0x02, 0x44 }, { 0x02, 0x61 },
	{ 0x02, 0x7D }, { 0x02, 0x9A }, { 0x02, 0xB6 }, { 0x02, 0xD3 }, { 0x02, 0xEF }, { 0x03, 0x0C }, { 0x03, 0x28 }, { 0x03, 0x44 }, { 0x03, 0x61 }, { 0x03, 0x7D },
	{ 0x03, 0x9A }, { 0x03, 0xB6 }, { 0x03, 0xD3 }, { 0x03, 0xEF }, { 0x04, 0x0C }, { 0x04, 0x28 }, { 0x04, 0x45 }, { 0x04, 0x61 }, { 0x04, 0x7E }, { 0x04, 0x9A },
	{ 0x04, 0xB6 }, { 0x04, 0xD3 }, { 0x04, 0xEF }, { 0x05, 0x0C }, { 0x05, 0x28 }, { 0x05, 0x45 }, { 0x05, 0x55 }, { 0x05, 0x60 }, { 0x05, 0x67 }, { 0x05, 0x6F },
	{ 0x05, 0x76 }, { 0x05, 0x7E }, { 0x05, 0x85 }, { 0x05, 0x8D }, { 0x05, 0x94 }, { 0x05, 0x9C }, { 0x05, 0xA3 }, { 0x05, 0xAB }, { 0x05, 0xB2 }, { 0x05, 0xBA },
	{ 0x05, 0xC1 }, { 0x05, 0xC9 }, { 0x05, 0xD0 }, { 0x05, 0xD8 }, { 0x05, 0xDF }, { 0x05, 0xE6 }, { 0x05, 0xEE }, { 0x05, 0xF5 }, { 0x05, 0xFD }, { 0x06, 0x04 },
	{ 0x06, 0x0C }, { 0x06, 0x13 }, { 0x06, 0x1B }, { 0x06, 0x22 }, { 0x06, 0x2A }, { 0x06, 0x31 }, { 0x06, 0x36 }, { 0x06, 0x40 }, { 0x06, 0x48 }, { 0x06, 0x4F },
	{ 0x06, 0x57 }, { 0x06, 0x5E }, { 0x06, 0x66 }, { 0x06, 0x6D }, { 0x06, 0x75 }, { 0x06, 0x7C }, { 0x06, 0x84 }, { 0x06, 0x8B }, { 0x06, 0x93 }, { 0x06, 0x9A },
	{ 0x06, 0xA2 }, { 0x06, 0xA9 }, { 0x06, 0xB1 }, { 0x06, 0xB8 }, { 0x06, 0xC0 }, { 0x06, 0xC7 }, { 0x06, 0xCF }, { 0x06, 0xD6 }, { 0x06, 0xDE }, { 0x06, 0xE5 },
	{ 0x06, 0xED }, { 0x06, 0xF4 }, { 0x06, 0xFC }, { 0x07, 0x03 }, { 0x07, 0x0B }, { 0x07, 0x12 }, { 0x07, 0x1A }, { 0x07, 0x21 }, { 0x07, 0x29 }, { 0x07, 0x30 },
	{ 0x07, 0x37 }, { 0x07, 0x3F }, { 0x07, 0x46 }, { 0x07, 0x4E }, { 0x07, 0x55 }, { 0x07, 0x5D }, { 0x07, 0x64 }, { 0x07, 0x6C }, { 0x07, 0x73 }, { 0x07, 0x7B },
	{ 0x07, 0x82 }, { 0x07, 0x8A }, { 0x07, 0x91 }, { 0x07, 0x99 }, { 0x07, 0xA0 }, { 0x07, 0xA8 }, { 0x07, 0xAF }, { 0x07, 0xB7 }, { 0x07, 0xBE }, { 0x07, 0xC6 },
	{ 0x07, 0xCD }, { 0x07, 0xD5 }, { 0x07, 0xDC }, { 0x07, 0xE4 }, { 0x07, 0xEB }, { 0x07, 0xF3 }, { 0x07, 0xFA }, { 0x07, 0xFF },
};

static u8 gts10p_hbm_transition_table[MAX_PANEL_HBM][SMOOTH_TRANS_MAX][1] = {
	/* HBM off */
	{
		/* Normal */
		{ 0x20 },
		/* Smooth */
		{ 0x28 },
	},
	/* HBM on */
	{
		/* Normal */
		{ 0xE0 },
		/* Smooth */
		{ 0xE8 }, /* No smooth dimming in HBM */
	}
};

static u8 gts10p_acl_opr_table[MAX_PANEL_HBM][MAX_ANA38407_ACL_OPR][1] = {
	[PANEL_HBM_OFF] = {
		[ANA38407_ACL_OPR_0] = { 0x00 }, /* ACL OFF, OPR 0% */
		[ANA38407_ACL_OPR_1] = { 0x01 }, /* ACL ON, OPR 8% */
		[ANA38407_ACL_OPR_2] = { 0x02 }, /* ACL ON, OPR 15% */
		[ANA38407_ACL_OPR_3] = { 0x02 }, /* ACL ON, OPR 15% */
	},
	[PANEL_HBM_ON] = {
		[ANA38407_ACL_OPR_0] = { 0x00 }, /* ACL ON, OPR 0% */
		[ANA38407_ACL_OPR_1] = { 0x01 }, /* ACL ON, OPR 8% */
		[ANA38407_ACL_OPR_2] = { 0x01 }, /* ACL ON, OPR 8% */
		[ANA38407_ACL_OPR_3] = { 0x01 }, /* ACL ON, OPR 8% */
	},
};

static u8 gts10p_fps_table[MAX_ANA38407_VRR][1] = {
	[ANA38407_VRR_120HS] = { 0x00 },
	[ANA38407_VRR_60HS_120HS_TE_HW_SKIP_1] = { 0x00 },
	[ANA38407_VRR_60HS] = { 0x10 },
	[ANA38407_VRR_30HS_60HS_TE_HW_SKIP_1] = { 0x10 },
	[ANA38407_VRR_30HS_120HS_TE_HW_SKIP_3] = { 0x00 },
};

static u8 gts10p_fps_tsp_vsync_table[MAX_ANA38407_VRR][4] = {
	[ANA38407_VRR_120HS] = { 0x80, 0x00, 0x00, 0x00 },
	[ANA38407_VRR_60HS_120HS_TE_HW_SKIP_1] = { 0x80, 0x00, 0x00, 0x00 },
	[ANA38407_VRR_60HS] = { 0xAA, 0xAA, 0xAA, 0xAA },
	[ANA38407_VRR_30HS_60HS_TE_HW_SKIP_1] = { 0xAA, 0xAA, 0xAA, 0xAA },
	[ANA38407_VRR_30HS_120HS_TE_HW_SKIP_3] = { 0x80, 0x00, 0x00, 0x00 },
};

#if 0
static u8 gts10p_ffc_table[MAX_ANA38407_HS_CLK][8] = {
	[ANA38407_HS_CLK_1108] = { 0x00, 0x11, 0x11, 0xE9, 0x31, 0x31, 0x31, 0x31 }, // FFC for HS: 1108
	[ANA38407_HS_CLK_1124] = { 0x00, 0x11, 0x11, 0xF1, 0x37, 0x37, 0x37, 0x37 }, // FFC for HS: 1124
	[ANA38407_HS_CLK_1125] = { 0x00, 0x11, 0x11, 0xF2, 0x38, 0x38, 0x38, 0x38 }, // FFC for HS: 1125
};

static u8 gts10p_te_setting_table[MAX_ANA38407_VRR][4] = {
	[ANA38407_VRR_120HS] = { 0x10, 0x90, 0x0F, 0x0F },
	[ANA38407_VRR_60HS_120HS_TE_HW_SKIP_1] = { 0x0B, 0x90, 0x0F, 0x0F },
	[ANA38407_VRR_60HS] = { 0x10, 0x90, 0x0F, 0x0F },
};
#endif

static u8 gts10p_te_frame_sel_table[MAX_ANA38407_VRR][1] = {
	[ANA38407_VRR_120HS] = { 0x00 },
	[ANA38407_VRR_60HS_120HS_TE_HW_SKIP_1] = { 0x01 },
	[ANA38407_VRR_60HS] = { 0x00 },
	[ANA38407_VRR_30HS_60HS_TE_HW_SKIP_1] = { 0x01 },
	[ANA38407_VRR_30HS_120HS_TE_HW_SKIP_3] = { 0x03 },
};

static struct maptbl gts10p_maptbl[MAX_MAPTBL] = {
	[GAMMA_MODE2_MAPTBL] = DEFINE_2D_MAPTBL(gts10p_brt_table, &DDI_FUNC(ANA38407_MAPTBL_INIT_GAMMA_MODE2_BRT), &OLED_FUNC(OLED_MAPTBL_GETIDX_GM2_BRT), &OLED_FUNC(OLED_MAPTBL_COPY_DEFAULT)),
	[HBM_ONOFF_MAPTBL] = DEFINE_3D_MAPTBL(gts10p_hbm_transition_table, &OLED_FUNC(OLED_MAPTBL_INIT_DEFAULT), &DDI_FUNC(ANA38407_MAPTBL_GETIDX_HBM_TRANSITION), &OLED_FUNC(OLED_MAPTBL_COPY_DEFAULT)),
	[ACL_OPR_MAPTBL] = DEFINE_3D_MAPTBL(gts10p_acl_opr_table, &OLED_FUNC(OLED_MAPTBL_INIT_DEFAULT), &DDI_FUNC(ANA38407_MAPTBL_GETIDX_ACL_OPR), &OLED_FUNC(OLED_MAPTBL_COPY_DEFAULT)),
	[TSET_MAPTBL] = DEFINE_0D_MAPTBL(gts10p_tset_table, &OLED_FUNC(OLED_MAPTBL_INIT_DEFAULT), NULL, &OLED_FUNC(OLED_MAPTBL_COPY_TSET)),
	[FPS_MAPTBL] = DEFINE_2D_MAPTBL(gts10p_fps_table, &OLED_FUNC(OLED_MAPTBL_INIT_DEFAULT), &DDI_FUNC(ANA38407_MAPTBL_GETIDX_VRR), &OLED_FUNC(OLED_MAPTBL_COPY_DEFAULT)),
	[FPS_TSP_VSYNC_MAPTBL] = DEFINE_2D_MAPTBL(gts10p_fps_tsp_vsync_table, &OLED_FUNC(OLED_MAPTBL_INIT_DEFAULT), &DDI_FUNC(ANA38407_MAPTBL_GETIDX_VRR), &OLED_FUNC(OLED_MAPTBL_COPY_DEFAULT)),
	[TE_FRAME_SEL_MAPTBL] = DEFINE_2D_MAPTBL(gts10p_te_frame_sel_table, &OLED_FUNC(OLED_MAPTBL_INIT_DEFAULT), &DDI_FUNC(ANA38407_MAPTBL_GETIDX_VRR), &OLED_FUNC(OLED_MAPTBL_COPY_DEFAULT)),
#if 0
	[TE_SETTING_MAPTBL] = DEFINE_2D_MAPTBL(gts10p_te_setting_table, &OLED_FUNC(OLED_MAPTBL_INIT_DEFAULT), &DDI_FUNC(ANA38407_MAPTBL_GETIDX_VRR), &OLED_FUNC(OLED_MAPTBL_COPY_DEFAULT)),
	[SET_FFC_MAPTBL] = DEFINE_2D_MAPTBL(gts10p_ffc_table, &OLED_FUNC(OLED_MAPTBL_INIT_DEFAULT), &DDI_FUNC(ANA38407_MAPTBL_GETIDX_FFC), &OLED_FUNC(OLED_MAPTBL_COPY_DEFAULT)),
#endif
};

/* ===================================================================================== */
/* ============================== [ANA38407 COMMAND TABLE] ============================== */
/* ===================================================================================== */
static u8 GTS10P_KEY1_ENABLE[] = { 0xF0, 0x5A, 0x5A };
static u8 GTS10P_KEY2_ENABLE[] = { 0xF1, 0x5A, 0x5A };

static u8 GTS10P_KEY1_DISABLE[] = { 0xF0, 0xA5, 0xA5 };
static u8 GTS10P_KEY2_DISABLE[] = { 0xF1, 0xA5, 0xA5 };

static u8 GTS10P_SLEEP_OUT[] = { 0x11 };
static u8 GTS10P_SLEEP_IN[] = { 0x10 };
static u8 GTS10P_DISPLAY_OFF[] = { 0x28 };
static u8 GTS10P_DISPLAY_ON[] = { 0x29 };
static u8 GTS10P_TE_ON[] = { 0x35, 0x00 };
static u8 GTS10P_TE_OFFSET[] = { 0xb9, 0x02, 0x60, 0xD3, 0x08 };

static DEFINE_STATIC_PACKET(gts10p_level1_key_enable, DSI_PKT_TYPE_WR, GTS10P_KEY1_ENABLE, 0);
static DEFINE_STATIC_PACKET(gts10p_level2_key_enable, DSI_PKT_TYPE_WR, GTS10P_KEY2_ENABLE, 0);

static DEFINE_STATIC_PACKET(gts10p_level1_key_disable, DSI_PKT_TYPE_WR, GTS10P_KEY1_DISABLE, 0);
static DEFINE_STATIC_PACKET(gts10p_level2_key_disable, DSI_PKT_TYPE_WR, GTS10P_KEY2_DISABLE, 0);

static DEFINE_STATIC_PACKET(gts10p_sleep_out, DSI_PKT_TYPE_WR, GTS10P_SLEEP_OUT, 0);
static DEFINE_STATIC_PACKET(gts10p_sleep_in, DSI_PKT_TYPE_WR, GTS10P_SLEEP_IN, 0);
static DEFINE_STATIC_PACKET(gts10p_display_on, DSI_PKT_TYPE_WR, GTS10P_DISPLAY_ON, 0);
static DEFINE_STATIC_PACKET(gts10p_display_off, DSI_PKT_TYPE_WR, GTS10P_DISPLAY_OFF, 0);
static DEFINE_STATIC_PACKET(gts10p_te_on, DSI_PKT_TYPE_WR, GTS10P_TE_ON, 0);
static DEFINE_STATIC_PACKET(gts10p_te_offset, DSI_PKT_TYPE_WR, GTS10P_TE_OFFSET, 0);


static u8 GTS10P_INTR_SETTING_1[] = {
	0xC1,
	0x02	/* 0x00 : Active High */	/* 0x02 : Active Low */
};
static DEFINE_STATIC_PACKET(gts10p_intr_setting_1, DSI_PKT_TYPE_WR, GTS10P_INTR_SETTING_1, 0x00);

static u8 GTS10P_INTR_SETTING_2[] = {
	0xC0,
	0x0F, 0x00, 0x00, 0x00, 0x14, 0x46, 0x81
};
static DEFINE_STATIC_PACKET(gts10p_intr_setting_2, DSI_PKT_TYPE_WR, GTS10P_INTR_SETTING_2, 0x03);

static u8 GTS10P_INTR_SETTING_3[] = {
	0xC1,
	0x13
};
static DEFINE_STATIC_PACKET(gts10p_intr_setting_3, DSI_PKT_TYPE_WR, GTS10P_INTR_SETTING_3, 0x00);

static u8 GTS10P_INTR_SETTING_4[] = {
	0xC0,
	0x0F, 0x00, 0x00, 0x00, 0x08, 0xCF, 0x81
};
static DEFINE_STATIC_PACKET(gts10p_intr_setting_4, DSI_PKT_TYPE_WR, GTS10P_INTR_SETTING_4, 0x03);

static u8 GTS10P_INTR_SETTING_5[] = {
	0xC1,
	0x05
};
static DEFINE_STATIC_PACKET(gts10p_intr_setting_5, DSI_PKT_TYPE_WR, GTS10P_INTR_SETTING_5, 0x00);

static u8 GTS10P_INTR_SETTING_6[] = {
	0xC0,
	0x0F, 0x00, 0x00, 0x00, 0x09, 0xCD, 0x81
};
static DEFINE_STATIC_PACKET(gts10p_intr_setting_6, DSI_PKT_TYPE_WR, GTS10P_INTR_SETTING_6, 0x03);

static u8 GTS10P_TSP_SYNC_ON[] = {
	0xB9, 0xCC
};
static DEFINE_STATIC_PACKET(gts10p_tsp_sync_on, DSI_PKT_TYPE_WR, GTS10P_TSP_SYNC_ON, 0x0B);

static u8 GTS10P_DIA_ON[] = {
	0x91, 0x02
};
static DEFINE_STATIC_PACKET(gts10p_dia_on, DSI_PKT_TYPE_WR, GTS10P_DIA_ON, 0x00);

static u8 GTS10P_HBM_TRANSITION[] = {
	0x53, 0x20
};
static DEFINE_PKTUI(gts10p_hbm_transition, &gts10p_maptbl[HBM_ONOFF_MAPTBL], 1);
static DEFINE_VARIABLE_PACKET(gts10p_hbm_transition, DSI_PKT_TYPE_WR, GTS10P_HBM_TRANSITION, 0);

static u8 GTS10P_ACL_SETTING[] = {
	0x55, 0x01
};
static DEFINE_PKTUI(gts10p_acl_setting, &gts10p_maptbl[ACL_OPR_MAPTBL], 1);
static DEFINE_VARIABLE_PACKET(gts10p_acl_setting, DSI_PKT_TYPE_WR, GTS10P_ACL_SETTING, 0);

static u8 GTS10P_ACL_CONTROL_1[] = {
	0xC9,
	0x00, 0x05	/* 0x00, 0x05 : 32 Frame Avg */
};
static DEFINE_STATIC_PACKET(gts10p_acl_control_1, DSI_PKT_TYPE_WR, GTS10P_ACL_CONTROL_1, 0x5F);

static u8 GTS10P_ACL_CONTROL_2[] = {
	0xC9,
	0x40, 0xFF, 0x26		/* 0x40, 0xFF : Start Point 50% */
};
static DEFINE_STATIC_PACKET(gts10p_acl_control_2, DSI_PKT_TYPE_WR, GTS10P_ACL_CONTROL_2, 0x51);

static u8 GTS10P_ACL_CONTROL_3[] = {
	0xC9,
	0x4A, 0x90
};
static DEFINE_STATIC_PACKET(gts10p_acl_control_3, DSI_PKT_TYPE_WR, GTS10P_ACL_CONTROL_3, 0x62);

static u8 GTS10P_IRC_FLAT_Z_SETTING[] = {
	0xE0,
	0xC3, 0x69, 0xFF, 0x1D, 0x00, 0x00, 0xC6,
	0xCC, 0x00, 0xAA, 0x1A
};
static DEFINE_STATIC_PACKET(gts10p_irc_flat_z_setting, DSI_PKT_TYPE_WR, GTS10P_IRC_FLAT_Z_SETTING, 0x0A);

static u8 GTS10P_WRDISBV[] = {
	0x51, 0x03, 0xFF
};
static DEFINE_PKTUI(gts10p_wrdisbv, &gts10p_maptbl[GAMMA_MODE2_MAPTBL], 1);
static DEFINE_VARIABLE_PACKET(gts10p_wrdisbv, DSI_PKT_TYPE_WR, GTS10P_WRDISBV, 0);

static u8 GTS10P_TSET_SET_1[] = {
	0xC1,
	0x19,
};
static DEFINE_PKTUI(gts10p_tset_set_1, &gts10p_maptbl[TSET_MAPTBL], 1);
static DEFINE_VARIABLE_PACKET(gts10p_tset_set_1, DSI_PKT_TYPE_WR, GTS10P_TSET_SET_1, 0x00);

static u8 GTS10P_TSET_SET_2[] = {
	0xC0,
	0x0F, 0x00, 0x00, 0x00, 0x06, 0xB1, 0x81
};
static DEFINE_STATIC_PACKET(gts10p_tset_set_2, DSI_PKT_TYPE_WR, GTS10P_TSET_SET_2, 0x03);

static u8 GTS10P_SP_SETTING[] = {
	0xD2, 0x01
};
static DEFINE_STATIC_PACKET(gts10p_sp_setting, DSI_PKT_TYPE_WR, GTS10P_SP_SETTING, 0x68);

static u8 GTS10P_FPS[] = { 0x60, 0x00 };
static DEFINE_PKTUI(gts10p_fps, &gts10p_maptbl[FPS_MAPTBL], 1);
static DEFINE_VARIABLE_PACKET(gts10p_fps, DSI_PKT_TYPE_WR, GTS10P_FPS, 0);

static u8 GTS10P_FPS_TSP_VSYNC[] = {
	0xB9,
	0x80, 0x00, 0x00, 0x00
};
static DEFINE_PKTUI(gts10p_fps_tsp_vsync, &gts10p_maptbl[FPS_TSP_VSYNC_MAPTBL], 1);
static DEFINE_VARIABLE_PACKET(gts10p_fps_tsp_vsync, DSI_PKT_TYPE_WR, GTS10P_FPS_TSP_VSYNC, 0x10);

static u8 GTS10P_DSC[] = {
	0x9D,
	0x01
};
static DEFINE_STATIC_PACKET(gts10p_dsc, DSI_PKT_TYPE_WR, GTS10P_DSC, 0);

static u8 GTS10P_PPS[] = {
	0x9E,
	0x11, 0x00, 0x00, 0x89, 0x30, 0x80, 0x06,
	0xD8, 0x0A, 0xF0, 0x00, 0x49, 0x05, 0x78,
	0x05, 0x78, 0x02, 0x00, 0x03, 0xBD, 0x00,
	0x20, 0x0A, 0x4A, 0x00, 0x13, 0x00, 0x0C,
	0x01, 0x56, 0x00, 0x88, 0x18, 0x00, 0x10,
	0xD0, 0x03, 0x0C, 0x20, 0x00, 0x06, 0x0B,
	0x0B, 0x33, 0x0E, 0x1C, 0x2A, 0x38, 0x46,
	0x54, 0x62, 0x69, 0x70, 0x77, 0x79, 0x7B,
	0x7D, 0x7E, 0x01, 0x02, 0x01, 0x00, 0x09,
	0x40, 0x09, 0xBE, 0x19, 0xFC, 0x19, 0xFA,
	0x19, 0xF8, 0x1A, 0x38, 0x1A, 0x78, 0x1A,
	0xB6, 0x2A, 0xF6, 0x2B, 0x34, 0x2B, 0x74,
	0x3B, 0x74, 0x6B, 0xF4
};
static DEFINE_STATIC_PACKET(gts10p_pps, DSI_PKT_TYPE_WR, GTS10P_PPS, 0);

static u8 GTS10P_TE_FRAME_SEL[] = {
	0xDD,
	0x00,
};
static DEFINE_PKTUI(gts10p_te_frame_sel, &gts10p_maptbl[TE_FRAME_SEL_MAPTBL], 1);
static DEFINE_VARIABLE_PACKET(gts10p_te_frame_sel, DSI_PKT_TYPE_WR, GTS10P_TE_FRAME_SEL, 0x13);

#ifdef CONFIG_USDM_TCON_PRE_EMPHASIS_TEST
static u8 GTS10P_TCON_PRE_04_CONDITION[] = {
	0xC1, 0x04,
};
static DEFINE_STATIC_PACKET(gts10p_tcon_pre_04_condition, DSI_PKT_TYPE_WR, GTS10P_TCON_PRE_04_CONDITION, 0);

static u8 GTS10P_TCON_PRE_00_CONDITION[] = {
	0xC1, 0x00,
};
static DEFINE_STATIC_PACKET(gts10p_tcon_pre_00_condition, DSI_PKT_TYPE_WR, GTS10P_TCON_PRE_00_CONDITION, 0);

static u8 GTS10P_TCON_PRE_C0_0[] = {
	0xC0,
	0x0F, 0x00, 0x00, 0x00, 0x03, 0x6A, 0x81
};
static DEFINE_STATIC_PACKET(gts10p_tcon_pre_c0_0_condition, DSI_PKT_TYPE_WR, GTS10P_TCON_PRE_C0_0, 0x3);

static u8 GTS10P_TCON_PRE_C0_1[] = {
	0xC0,
	0x0F, 0x00, 0x00, 0x00, 0x03, 0x6B, 0x81
};
static DEFINE_STATIC_PACKET(gts10p_tcon_pre_c0_1_condition, DSI_PKT_TYPE_WR, GTS10P_TCON_PRE_C0_1, 0x3);

static u8 GTS10P_TCON_PRE_C0_2[] = {
	0xC0,
	0x0F, 0x00, 0x00, 0x00, 0x03, 0x6C, 0x81
};
static DEFINE_STATIC_PACKET(gts10p_tcon_pre_c0_2_condition, DSI_PKT_TYPE_WR, GTS10P_TCON_PRE_C0_2, 0x3);

static u8 GTS10P_TCON_PRE_C0_3[] = {
	0xC0,
	0x0F, 0x00, 0x00, 0x00, 0x03, 0x6D, 0x81
};
static DEFINE_STATIC_PACKET(gts10p_tcon_pre_c0_3_condition, DSI_PKT_TYPE_WR, GTS10P_TCON_PRE_C0_3, 0x3);

static u8 GTS10P_TCON_PRE_C0_4[] = {
	0xC0,
	0x0F, 0x00, 0x00, 0x00, 0x03, 0x6E, 0x81
};
static DEFINE_STATIC_PACKET(gts10p_tcon_pre_c0_4_condition, DSI_PKT_TYPE_WR, GTS10P_TCON_PRE_C0_4, 0x3);

static u8 GTS10P_TCON_PRE_C0_5[] = {
	0xC0,
	0x0F, 0x00, 0x00, 0x00, 0x03, 0x6F, 0x81
};
static DEFINE_STATIC_PACKET(gts10p_tcon_pre_c0_5_condition, DSI_PKT_TYPE_WR, GTS10P_TCON_PRE_C0_5, 0x3);
#endif

#ifdef CONFIG_USDM_FACTORY_GCT_TEST
//page 3/8
static u8 GTS10P_GCT_00[] = {
	0x51, 0x00, 0x00
};
static DEFINE_STATIC_PACKET(gts10p_gct_00, DSI_PKT_TYPE_WR, GTS10P_GCT_00, 0);

static u8 GTS10P_GCT_01[] = {
	0xC1, 0x10
};
static DEFINE_STATIC_PACKET(gts10p_gct_01, DSI_PKT_TYPE_WR, GTS10P_GCT_01, 0);

static u8 GTS10P_GCT_02[] = {
	0xC0, 0x0F, 0x00, 0x00, 0x00, 0x03, 0x93, 0x81
};
static DEFINE_STATIC_PACKET(gts10p_gct_02, DSI_PKT_TYPE_WR, GTS10P_GCT_02, 0x03);

static u8 GTS10P_GCT_03[] = {
	0xC1, 0x01
};
static DEFINE_STATIC_PACKET(gts10p_gct_03, DSI_PKT_TYPE_WR, GTS10P_GCT_03, 0);

static u8 GTS10P_GCT_04[] = {
	0xC0, 0x0F, 0x00, 0x00, 0x00, 0x21, 0xDE, 0x81
};
static DEFINE_STATIC_PACKET(gts10p_gct_04, DSI_PKT_TYPE_WR, GTS10P_GCT_04, 0x03);

static u8 GTS10P_GCT_05[] = {
	0xC1, 0x01
};
static DEFINE_STATIC_PACKET(gts10p_gct_05, DSI_PKT_TYPE_WR, GTS10P_GCT_05, 0);

static u8 GTS10P_GCT_06[] = {
	0xC0, 0x0F, 0x00, 0x00, 0x00, 0x31, 0xB2, 0x81
};
static DEFINE_STATIC_PACKET(gts10p_gct_06, DSI_PKT_TYPE_WR, GTS10P_GCT_06, 0x03);

static u8 GTS10P_GCT_07[] = {
	0xC1, 0x01
};
static DEFINE_STATIC_PACKET(gts10p_gct_07, DSI_PKT_TYPE_WR, GTS10P_GCT_07, 0);

//page 4/8
static u8 GTS10P_GCT_08[] = {
	0xC0, 0x0F, 0x00, 0x00, 0x00, 0x31, 0xDA, 0x81
};
static DEFINE_STATIC_PACKET(gts10p_gct_08, DSI_PKT_TYPE_WR, GTS10P_GCT_08, 0x03);

static u8 GTS10P_GCT_09[] = {
	0xC1, 0x00
};
static DEFINE_STATIC_PACKET(gts10p_gct_09, DSI_PKT_TYPE_WR, GTS10P_GCT_09, 0);

static u8 GTS10P_GCT_10[] = {
	0xC0, 0x0F, 0x00, 0x00, 0x00, 0x36, 0xF9, 0x81
};
static DEFINE_STATIC_PACKET(gts10p_gct_10, DSI_PKT_TYPE_WR, GTS10P_GCT_10, 0x03);

static u8 GTS10P_GCT_11[] = {
	0xC1, 0x03
};
static DEFINE_STATIC_PACKET(gts10p_gct_11, DSI_PKT_TYPE_WR, GTS10P_GCT_11, 0);

static u8 GTS10P_GCT_12[] = {
	0xC0, 0x0F, 0x00, 0x00, 0x00, 0x06, 0xB4, 0x81
};
static DEFINE_STATIC_PACKET(gts10p_gct_12, DSI_PKT_TYPE_WR, GTS10P_GCT_12, 0x03);

static u8 GTS10P_GCT_13[] = {
	0xC1, 0xC4
};
static DEFINE_STATIC_PACKET(gts10p_gct_13, DSI_PKT_TYPE_WR, GTS10P_GCT_13, 0);

static u8 GTS10P_GCT_14[] = {
	0xC0, 0x0F, 0x00, 0x00, 0x00, 0x08, 0xFE, 0x81
};
static DEFINE_STATIC_PACKET(gts10p_gct_14, DSI_PKT_TYPE_WR, GTS10P_GCT_14, 0x03);

static u8 GTS10P_GCT_15[] = {
	0xC1, 0xC0
};
static DEFINE_STATIC_PACKET(gts10p_gct_15, DSI_PKT_TYPE_WR, GTS10P_GCT_15, 0);

static u8 GTS10P_GCT_16[] = {
	0xC0, 0x0F, 0x00, 0x00, 0x00, 0x08, 0xFE, 0x81
};
static DEFINE_STATIC_PACKET(gts10p_gct_16, DSI_PKT_TYPE_WR, GTS10P_GCT_16, 0x03);

//page 5/8
static u8 GTS10P_GCT_17[] = {
	0xC1, 0x0D
};
static DEFINE_STATIC_PACKET(gts10p_gct_17, DSI_PKT_TYPE_WR, GTS10P_GCT_17, 0);

static u8 GTS10P_GCT_18[] = {
	0xC0, 0x0F, 0x00, 0x00, 0x00, 0x08, 0xFF, 0x81
};
static DEFINE_STATIC_PACKET(gts10p_gct_18, DSI_PKT_TYPE_WR, GTS10P_GCT_18, 0x03);

static u8 GTS10P_GCT_19[] = {
	0xC1, 0x55
};
static DEFINE_STATIC_PACKET(gts10p_gct_19, DSI_PKT_TYPE_WR, GTS10P_GCT_19, 0);

static u8 GTS10P_GCT_20[] = {
	0xC0, 0x0F, 0x00, 0x00, 0x00, 0x09, 0x0D, 0x81
};
static DEFINE_STATIC_PACKET(gts10p_gct_20, DSI_PKT_TYPE_WR, GTS10P_GCT_20, 0x03);

static u8 GTS10P_GCT_21[] = {
	0xC1, 0x55
};
static DEFINE_STATIC_PACKET(gts10p_gct_21, DSI_PKT_TYPE_WR, GTS10P_GCT_21, 0);

static u8 GTS10P_GCT_22[] = {
	0xC0, 0x0F, 0x00, 0x00, 0x00, 0x09, 0x0E, 0x81
};
static DEFINE_STATIC_PACKET(gts10p_gct_22, DSI_PKT_TYPE_WR, GTS10P_GCT_22, 0x03);

static u8 GTS10P_GCT_23[] = {
	0xC1, 0x02
};
static DEFINE_STATIC_PACKET(gts10p_gct_23, DSI_PKT_TYPE_WR, GTS10P_GCT_23, 0);

static u8 GTS10P_GCT_24[] = {
	0xC0, 0x0F, 0x00, 0x00, 0x00, 0x09, 0x0F, 0x81
};
static DEFINE_STATIC_PACKET(gts10p_gct_24, DSI_PKT_TYPE_WR, GTS10P_GCT_24, 0x03);

static u8 GTS10P_GCT_25[] = {
	0xC1, 0xC1
};
static DEFINE_STATIC_PACKET(gts10p_gct_25, DSI_PKT_TYPE_WR, GTS10P_GCT_25, 0);

static u8 GTS10P_GCT_26[] = {
	0xC0, 0x0F, 0x00, 0x00, 0x00, 0x08, 0xFE, 0x81
};
static DEFINE_STATIC_PACKET(gts10p_gct_26, DSI_PKT_TYPE_WR, GTS10P_GCT_26, 0x03);

//page 6/8
static u8 GTS10P_GCT_27[] = {
	0xC0, 0x0E, 0x00, 0x00, 0x00, 0x09, 0x24, 0x81
};
static DEFINE_STATIC_PACKET(gts10p_gct_27, DSI_PKT_TYPE_WR, GTS10P_GCT_27, 0x03);

// Read here
static u8 GTS10P_GCT_28[] = {
	0xC1, 0x04
};
static DEFINE_STATIC_PACKET(gts10p_gct_28, DSI_PKT_TYPE_WR, GTS10P_GCT_28, 0);

static u8 GTS10P_GCT_29[] = {
	0xC0, 0x0F, 0x00, 0x00, 0x00, 0x08, 0xFE, 0x81
};
static DEFINE_STATIC_PACKET(gts10p_gct_29, DSI_PKT_TYPE_WR, GTS10P_GCT_29, 0x03);

static u8 GTS10P_GCT_30[] = {
	0xC1, 0xC4
};
static DEFINE_STATIC_PACKET(gts10p_gct_30, DSI_PKT_TYPE_WR, GTS10P_GCT_30, 0);

static u8 GTS10P_GCT_31[] = {
	0xC0, 0x0F, 0x00, 0x00, 0x00, 0x08, 0xFE, 0x81
};
static DEFINE_STATIC_PACKET(gts10p_gct_31, DSI_PKT_TYPE_WR, GTS10P_GCT_31, 0x03);

static u8 GTS10P_GCT_32[] = {
	0xC1, 0xC0
};
static DEFINE_STATIC_PACKET(gts10p_gct_32, DSI_PKT_TYPE_WR, GTS10P_GCT_32, 0);

static u8 GTS10P_GCT_33[] = {
	0xC0, 0x0F, 0x00, 0x00, 0x00, 0x08, 0xFE, 0x81
};
static DEFINE_STATIC_PACKET(gts10p_gct_33, DSI_PKT_TYPE_WR, GTS10P_GCT_33, 0x03);

static u8 GTS10P_GCT_34[] = {
	0xC1, 0x3D
};
static DEFINE_STATIC_PACKET(gts10p_gct_34, DSI_PKT_TYPE_WR, GTS10P_GCT_34, 0);

//page 7/8
static u8 GTS10P_GCT_35[] = {
	0xC0, 0x0F, 0x00, 0x00, 0x00, 0x08, 0xFF, 0x81
};
static DEFINE_STATIC_PACKET(gts10p_gct_35, DSI_PKT_TYPE_WR, GTS10P_GCT_35, 0x03);

static u8 GTS10P_GCT_36[] = {
	0xC1, 0xC1
};
static DEFINE_STATIC_PACKET(gts10p_gct_36, DSI_PKT_TYPE_WR, GTS10P_GCT_36, 0);

static u8 GTS10P_GCT_37[] = {
	0xC0, 0x0F, 0x00, 0x00, 0x00, 0x08, 0xFE, 0x81
};
static DEFINE_STATIC_PACKET(gts10p_gct_37, DSI_PKT_TYPE_WR, GTS10P_GCT_37, 0x03);

static u8 GTS10P_GCT_38[] = {
	0xC0, 0x0E, 0x00, 0x00, 0x00, 0x09, 0x24, 0x81
};
static DEFINE_STATIC_PACKET(gts10p_gct_38, DSI_PKT_TYPE_WR, GTS10P_GCT_38, 0x03);
//read here

/* ANA38407 has only vddm_lv case, For the other cases, Just read without setting (dummy) */
static DEFINE_RULE_BASED_COND(gts10p_cond_is_gct_vddm_ge_vddm_lv,
		PANEL_PROPERTY_GCT_VDDM, GE, VDDM_LV);
#endif

#ifdef CONFIG_USDM_PANEL_MASK_LAYER
static u8 GTS10P_CIRCLE_ON[] = {
	0x7A, 0x05, 0x00, 0x00, 0x00
};
static DEFINE_STATIC_PACKET(gtp10p_cirlce_on, DSI_PKT_TYPE_WR, GTS10P_CIRCLE_ON, 0);
static u8 GTS10P_CIRCLE_OFF[] = {
	0x7A, 0x05, 0x00, 0x00, 0x02
};
static DEFINE_STATIC_PACKET(gtp10p_cirlce_off, DSI_PKT_TYPE_WR, GTS10P_CIRCLE_OFF, 0);
#endif

static DEFINE_RULE_BASED_COND(gts10p_cond_is_brightness_hbm,
		PANEL_BL_PROPERTY_BRIGHTNESS, GE, 2551); /* 0~2550 normal */
/* 120hs, 60phs */
static DEFINE_RULE_BASED_COND(gts10p_cond_is_120hz,
		PANEL_PROPERTY_PANEL_REFRESH_RATE, EQ, 120);
/* 60hs */
static DEFINE_RULE_BASED_COND(gts10p_cond_is_60hz,
		PANEL_PROPERTY_PANEL_REFRESH_RATE, EQ, 60);

static DEFINE_RULE_BASED_COND(gts10p_cond_is_te_skip_0,
		PANEL_PROPERTY_PANEL_REFRESH_TE_HW_SKIP_COUNT, EQ, 0);

static DEFINE_RULE_BASED_COND(gts10p_cond_is_te_skip_1,
		PANEL_PROPERTY_PANEL_REFRESH_TE_HW_SKIP_COUNT, EQ, 1);

static DEFINE_RULE_BASED_COND(gts10p_cond_is_te_skip_3,
		PANEL_PROPERTY_PANEL_REFRESH_TE_HW_SKIP_COUNT, EQ, 3);

static DEFINE_FUNC_BASED_COND(gts10p_cond_is_panel_refresh_rate_changed,
		&OLED_FUNC(OLED_COND_IS_PANEL_REFRESH_RATE_CHANGED));
static DEFINE_RULE_BASED_COND(gts10p_cond_is_panel_state_not_lpm,
		PANEL_PROPERTY_PANEL_STATE, NE, PANEL_STATE_ALPM);
static DEFINE_RULE_BASED_COND(gts10p_cond_is_panel_state_lpm,
		PANEL_PROPERTY_PANEL_STATE, EQ, PANEL_STATE_ALPM);

static DEFINE_PANEL_MDELAY(gts10p_wait_1msec, 1);
static DEFINE_PANEL_MDELAY(gts10p_wait_9msec, 9);
static DEFINE_PANEL_MDELAY(gts10p_wait_26msec, 26);
static DEFINE_PANEL_MDELAY(gts10p_wait_10msec, 10);
static DEFINE_PANEL_MDELAY(gts10p_wait_20msec, 20);
static DEFINE_PANEL_MDELAY(gts10p_wait_50msec, 50);
static DEFINE_PANEL_MDELAY(gts10p_wait_100msec, 100);
static DEFINE_PANEL_MDELAY(gts10p_wait_1000msec, 1000);
static DEFINE_PANEL_MDELAY(gts10p_wait_sleep_in, 100);
static DEFINE_PANEL_UDELAY(gts10p_wait_1usec, 1);
static DEFINE_PANEL_FRAME_DELAY(gts10p_wait_1_frame, 1);
static DEFINE_PANEL_FRAME_DELAY(gts10p_wait_2_frame, 2);
static DEFINE_PANEL_VSYNC_DELAY(gts10p_wait_1_vsync, 1);

static DEFINE_PANEL_KEY(gts10p_level1_key_enable, CMD_LEVEL_1, KEY_ENABLE, &PKTINFO(gts10p_level1_key_enable));
static DEFINE_PANEL_KEY(gts10p_level2_key_enable, CMD_LEVEL_2, KEY_ENABLE, &PKTINFO(gts10p_level2_key_enable));
static DEFINE_PANEL_KEY(gts10p_level1_key_disable, CMD_LEVEL_1, KEY_DISABLE, &PKTINFO(gts10p_level1_key_disable));
static DEFINE_PANEL_KEY(gts10p_level2_key_disable, CMD_LEVEL_2, KEY_DISABLE, &PKTINFO(gts10p_level2_key_disable));



static struct seqinfo SEQINFO(gts10p_set_bl_param_seq);
static struct seqinfo SEQINFO(gts10p_set_fps_param_seq);
static struct seqinfo SEQINFO(gts10p_res_init_seq);

static void *gts10p_common_setting_cmdtbl[] = {
	/* + Level key open +*/
	&KEYINFO(gts10p_level1_key_enable),
	&KEYINFO(gts10p_level2_key_enable),

	/* 9 TCON INTR Setting*/
	&PKTINFO(gts10p_intr_setting_1),
	&PKTINFO(gts10p_intr_setting_2),
	&PKTINFO(gts10p_intr_setting_3),
	&PKTINFO(gts10p_intr_setting_4),
	&PKTINFO(gts10p_intr_setting_5),
	&PKTINFO(gts10p_intr_setting_6),

	/* 10 UPIm, SSCG Setting*/
	/* ?? */

	/* 11 TE Setting*/
	&PKTINFO(gts10p_te_offset),
	&PKTINFO(gts10p_te_on),

	/* 12 TSP SYNC Setting*/
	&PKTINFO(gts10p_tsp_sync_on),

	/* 13 DSC Setting*/
	&PKTINFO(gts10p_dsc),
	&PKTINFO(gts10p_pps),

	/* 14 DIA Setting*/
	&PKTINFO(gts10p_dia_on),

	/* 15 Brightness Control*/
	&SEQINFO(gts10p_set_bl_param_seq),

	/* 16 SP Setting*/
	&PKTINFO(gts10p_sp_setting),

	/* 17 Wait 50ms*/
	&DLYINFO(gts10p_wait_50msec),

	/* 18 Freq. Setting*/
	&SEQINFO(gts10p_set_fps_param_seq),

	/* - Level key close - */
	&KEYINFO(gts10p_level2_key_disable),
	&KEYINFO(gts10p_level1_key_disable),
};

static DEFINE_SEQINFO(gts10p_common_setting_seq, gts10p_common_setting_cmdtbl);

static void *gts10p_init_cmdtbl[] = {
	&PKTINFO(gts10p_sleep_out),
	&SEQINFO(gts10p_common_setting_seq),
};

static void *gts10p_res_init_cmdtbl[] = {
	&KEYINFO(gts10p_level1_key_enable),
	&KEYINFO(gts10p_level2_key_enable),
	&ana38407_restbl[RES_ID],
	&ana38407_restbl[RES_COORDINATE],
	&ana38407_restbl[RES_CODE],
	&ana38407_restbl[RES_DATE],
	&ana38407_restbl[RES_OCTA_ID],
#ifdef CONFIG_USDM_PANEL_DPUI
	&ana38407_restbl[RES_SELF_DIAG],
	&ana38407_restbl[RES_ERR_FG],
	&ana38407_restbl[RES_DSI_ERR],
#endif
	&KEYINFO(gts10p_level2_key_disable),
	&KEYINFO(gts10p_level1_key_disable),
};
static DEFINE_SEQINFO(gts10p_res_init_seq, gts10p_res_init_cmdtbl);

static void *gts10p_set_bl_param_cmdtbl[] = {
	/* 15 Brightness Control*/
	/* 4.9.1 Max. & Dimming */
	&PKTINFO(gts10p_wrdisbv),
	&PKTINFO(gts10p_hbm_transition),
	&CONDINFO_IF(gts10p_cond_is_brightness_hbm),
		&PKTINFO(gts10p_irc_flat_z_setting),
	&CONDINFO_FI(gts10p_cond_is_brightness_hbm),

	/* 4.10 ACL Setting */
	&PKTINFO(gts10p_acl_setting),
	&PKTINFO(gts10p_acl_control_1),
	&PKTINFO(gts10p_acl_control_2),
	&PKTINFO(gts10p_acl_control_3),

	/* 4.11 ELVSS Temp Compensation */
	&PKTINFO(gts10p_tset_set_1),
	&PKTINFO(gts10p_tset_set_2),
};

static DEFINE_SEQINFO(gts10p_set_bl_param_seq, gts10p_set_bl_param_cmdtbl);

static void *gts10p_set_fps_param_cmdtbl[] = {
	&PKTINFO(gts10p_fps),
	&PKTINFO(gts10p_te_frame_sel),
	&PKTINFO(gts10p_fps_tsp_vsync),
};

static DEFINE_SEQINFO(gts10p_set_fps_param_seq, gts10p_set_fps_param_cmdtbl);

static void *gts10p_set_bl_cmdtbl[] = {
	&KEYINFO(gts10p_level1_key_enable),
	&KEYINFO(gts10p_level2_key_enable),
	&SEQINFO(gts10p_set_fps_param_seq),
	&SEQINFO(gts10p_set_bl_param_seq),
	&KEYINFO(gts10p_level2_key_disable),
	&KEYINFO(gts10p_level1_key_disable),
};

static void *gts10p_display_mode_cmdtbl[] = {
	&CONDINFO_IF(gts10p_cond_is_panel_state_not_lpm),
		&KEYINFO(gts10p_level1_key_enable),
		&KEYINFO(gts10p_level2_key_enable),
		&SEQINFO(gts10p_set_fps_param_seq),
		&SEQINFO(gts10p_set_bl_param_seq),
		&KEYINFO(gts10p_level2_key_disable),
		&KEYINFO(gts10p_level1_key_disable),
	&CONDINFO_FI(gts10p_cond_is_panel_state_not_lpm),
};

static void *gts10p_display_on_cmdtbl[] = {
	&PKTINFO(gts10p_display_on),
};

static void *gts10p_display_off_cmdtbl[] = {
	&PKTINFO(gts10p_display_off),
};

static void *gts10p_exit_cmdtbl[] = {
#ifdef CONFIG_USDM_PANEL_DPUI
	&ana38407_dmptbl[DUMP_RDDPM_SLEEP_IN],
	&ana38407_dmptbl[DUMP_RDDSM],
//	&ana38407_dmptbl[DUMP_ERR],
	&ana38407_dmptbl[DUMP_DSI_ERR],
	&ana38407_dmptbl[DUMP_SELF_DIAG],
#endif
	&PKTINFO(gts10p_sleep_in),
	&DLYINFO(gts10p_wait_sleep_in),
};

static void *gts10p_dump_cmdtbl[] = {
	&KEYINFO(gts10p_level1_key_enable),
	&KEYINFO(gts10p_level2_key_enable),
	&ana38407_dmptbl[DUMP_RDDPM],
	&ana38407_dmptbl[DUMP_RDDSM],
	&ana38407_dmptbl[DUMP_DSI_ERR],
	&ana38407_dmptbl[DUMP_SELF_DIAG],
	&KEYINFO(gts10p_level2_key_disable),
	&KEYINFO(gts10p_level1_key_disable),
};

static void *gts10p_check_condition_cmdtbl[] = {
	&KEYINFO(gts10p_level1_key_enable),
	&KEYINFO(gts10p_level2_key_enable),
	&ana38407_dmptbl[DUMP_RDDPM],
	&KEYINFO(gts10p_level2_key_disable),
	&KEYINFO(gts10p_level1_key_disable),
};

#ifdef CONFIG_USDM_PANEL_MASK_LAYER
static void *gts10p_mask_layer_enter_br_cmdtbl[] = {
	&DLYINFO(gts10p_wait_1_vsync),

	/* Common Rule: Next TE - 7~8msec */

	/* 120 HS */
	&CONDINFO_IF(gts10p_cond_is_120hz),
	&CONDINFO_IF(gts10p_cond_is_te_skip_0),
	&DLYINFO(gts10p_wait_1msec),
	&CONDINFO_FI(gts10p_cond_is_te_skip_0),
	&CONDINFO_FI(gts10p_cond_is_120hz),

	/* 60 pHS */
	&CONDINFO_IF(gts10p_cond_is_120hz),
	&CONDINFO_IF(gts10p_cond_is_te_skip_1),
	&DLYINFO(gts10p_wait_9msec),
	&CONDINFO_FI(gts10p_cond_is_te_skip_1),
	&CONDINFO_FI(gts10p_cond_is_120hz),

	/* 60 HS */
	&CONDINFO_IF(gts10p_cond_is_60hz),
	&CONDINFO_IF(gts10p_cond_is_te_skip_0),
	&DLYINFO(gts10p_wait_9msec),
	&CONDINFO_FI(gts10p_cond_is_te_skip_0),
	&CONDINFO_FI(gts10p_cond_is_60hz),

	/* 30 pHS */
	&CONDINFO_IF(gts10p_cond_is_120hz),
	&CONDINFO_IF(gts10p_cond_is_te_skip_3),
	&DLYINFO(gts10p_wait_26msec),
	&CONDINFO_FI(gts10p_cond_is_te_skip_3),
	&CONDINFO_FI(gts10p_cond_is_120hz),

	/* 30 HS */
	&CONDINFO_IF(gts10p_cond_is_60hz),
	&CONDINFO_IF(gts10p_cond_is_te_skip_1),
	&DLYINFO(gts10p_wait_26msec),
	&CONDINFO_FI(gts10p_cond_is_te_skip_1),
	&CONDINFO_FI(gts10p_cond_is_60hz),


	&KEYINFO(gts10p_level1_key_enable),
	&KEYINFO(gts10p_level2_key_enable),

	&SEQINFO(gts10p_set_bl_param_seq),

	&KEYINFO(gts10p_level2_key_disable),
	&KEYINFO(gts10p_level1_key_disable),
};

static void *gts10p_mask_layer_exit_br_cmdtbl[] = {
	&DLYINFO(gts10p_wait_1_vsync),

	/* Common Rule: Next TE - 7~8msec */

	/* 120 HS */
	&CONDINFO_IF(gts10p_cond_is_120hz),
	&CONDINFO_IF(gts10p_cond_is_te_skip_0),
	&DLYINFO(gts10p_wait_1msec),
	&CONDINFO_FI(gts10p_cond_is_te_skip_0),
	&CONDINFO_FI(gts10p_cond_is_120hz),

	/* 60 pHS */
	&CONDINFO_IF(gts10p_cond_is_120hz),
	&CONDINFO_IF(gts10p_cond_is_te_skip_1),
	&DLYINFO(gts10p_wait_9msec),
	&CONDINFO_FI(gts10p_cond_is_te_skip_1),
	&CONDINFO_FI(gts10p_cond_is_120hz),

	/* 60 HS */
	&CONDINFO_IF(gts10p_cond_is_60hz),
	&CONDINFO_IF(gts10p_cond_is_te_skip_0),
	&DLYINFO(gts10p_wait_9msec),
	&CONDINFO_FI(gts10p_cond_is_te_skip_0),
	&CONDINFO_FI(gts10p_cond_is_60hz),

	/* 30 pHS */
	&CONDINFO_IF(gts10p_cond_is_120hz),
	&CONDINFO_IF(gts10p_cond_is_te_skip_3),
	&DLYINFO(gts10p_wait_26msec),
	&CONDINFO_FI(gts10p_cond_is_te_skip_3),
	&CONDINFO_FI(gts10p_cond_is_120hz),

	/* 30 HS */
	&CONDINFO_IF(gts10p_cond_is_60hz),
	&CONDINFO_IF(gts10p_cond_is_te_skip_1),
	&DLYINFO(gts10p_wait_26msec),
	&CONDINFO_FI(gts10p_cond_is_te_skip_1),
	&CONDINFO_FI(gts10p_cond_is_60hz),

	&KEYINFO(gts10p_level1_key_enable),
	&KEYINFO(gts10p_level2_key_enable),

	&SEQINFO(gts10p_set_bl_param_seq),

	&KEYINFO(gts10p_level2_key_disable),
	&KEYINFO(gts10p_level1_key_disable),
};

static void *gts10p_green_circle_on_cmdtbl[] = {
	&KEYINFO(gts10p_level2_key_enable),
	&PKTINFO(gtp10p_cirlce_on),
	&KEYINFO(gts10p_level2_key_disable),
};

static void *gts10p_green_circle_off_cmdtbl[] = {
	&KEYINFO(gts10p_level2_key_enable),
	&PKTINFO(gtp10p_cirlce_off),
	&KEYINFO(gts10p_level2_key_disable),
};
#endif

#ifdef CONFIG_USDM_TCON_PRE_EMPHASIS_TEST
static void *gts10p_tcon_pre_emphasis_test_on_cmdtbl[] = {
	&KEYINFO(gts10p_level1_key_enable),
	&KEYINFO(gts10p_level2_key_enable),
	&PKTINFO(gts10p_tcon_pre_04_condition),
	&PKTINFO(gts10p_tcon_pre_c0_0_condition),
	&PKTINFO(gts10p_tcon_pre_04_condition),
	&PKTINFO(gts10p_tcon_pre_c0_1_condition),
	&PKTINFO(gts10p_tcon_pre_04_condition),
	&PKTINFO(gts10p_tcon_pre_c0_2_condition),
	&PKTINFO(gts10p_tcon_pre_04_condition),
	&PKTINFO(gts10p_tcon_pre_c0_3_condition),
	&PKTINFO(gts10p_tcon_pre_04_condition),
	&PKTINFO(gts10p_tcon_pre_c0_4_condition),
	&PKTINFO(gts10p_tcon_pre_04_condition),
	&PKTINFO(gts10p_tcon_pre_c0_5_condition),
	&KEYINFO(gts10p_level2_key_disable),
	&KEYINFO(gts10p_level1_key_disable),
};

static void *gts10p_tcon_pre_emphasis_test_off_cmdtbl[] = {
	&KEYINFO(gts10p_level1_key_enable),
	&KEYINFO(gts10p_level2_key_enable),
	&PKTINFO(gts10p_tcon_pre_00_condition),
	&PKTINFO(gts10p_tcon_pre_c0_0_condition),
	&PKTINFO(gts10p_tcon_pre_00_condition),
	&PKTINFO(gts10p_tcon_pre_c0_1_condition),
	&PKTINFO(gts10p_tcon_pre_00_condition),
	&PKTINFO(gts10p_tcon_pre_c0_2_condition),
	&PKTINFO(gts10p_tcon_pre_00_condition),
	&PKTINFO(gts10p_tcon_pre_c0_3_condition),
	&PKTINFO(gts10p_tcon_pre_00_condition),
	&PKTINFO(gts10p_tcon_pre_c0_4_condition),
	&PKTINFO(gts10p_tcon_pre_00_condition),
	&PKTINFO(gts10p_tcon_pre_c0_5_condition),
	&KEYINFO(gts10p_level2_key_disable),
	&KEYINFO(gts10p_level1_key_disable),
};
#endif

#ifdef CONFIG_USDM_FACTORY_GCT_TEST
static void *gts10p_gct_enter_cmdtbl[] = {
	NULL,
};

static void *gts10p_gct_vddm_cmdtbl[] = {
	NULL,
};

static void *gts10p_gct_img_0_update_cmdtbl[] = {
	&KEYINFO(gts10p_level1_key_enable),
	&KEYINFO(gts10p_level2_key_enable),

	&CONDINFO_IF(gts10p_cond_is_gct_vddm_ge_vddm_lv),
	/* 0 ~ 27 */
	&PKTINFO(gts10p_gct_00),
	&DLYINFO(gts10p_wait_10msec),
	&PKTINFO(gts10p_gct_01),
	&DLYINFO(gts10p_wait_10msec),
	&PKTINFO(gts10p_gct_02),
	&DLYINFO(gts10p_wait_10msec),
	&PKTINFO(gts10p_gct_03),
	&DLYINFO(gts10p_wait_10msec),
	&PKTINFO(gts10p_gct_04),
	&DLYINFO(gts10p_wait_10msec),
	&PKTINFO(gts10p_gct_05),
	&DLYINFO(gts10p_wait_10msec),
	&PKTINFO(gts10p_gct_06),
	&DLYINFO(gts10p_wait_10msec),
	&PKTINFO(gts10p_gct_07),
	&DLYINFO(gts10p_wait_10msec),
	&PKTINFO(gts10p_gct_08),
	&DLYINFO(gts10p_wait_10msec),
	&PKTINFO(gts10p_gct_09),
	&DLYINFO(gts10p_wait_10msec),
	&PKTINFO(gts10p_gct_10),
	&DLYINFO(gts10p_wait_10msec),
	&PKTINFO(gts10p_gct_11),
	&DLYINFO(gts10p_wait_10msec),
	&PKTINFO(gts10p_gct_12),
	&DLYINFO(gts10p_wait_10msec),
	&PKTINFO(gts10p_gct_13),
	&DLYINFO(gts10p_wait_10msec),
	&PKTINFO(gts10p_gct_14),
	&DLYINFO(gts10p_wait_100msec),
	&PKTINFO(gts10p_gct_15),
	&DLYINFO(gts10p_wait_10msec),
	&PKTINFO(gts10p_gct_16),
	&DLYINFO(gts10p_wait_100msec),
	&PKTINFO(gts10p_gct_17),
	&DLYINFO(gts10p_wait_10msec),
	&PKTINFO(gts10p_gct_18),
	&DLYINFO(gts10p_wait_10msec),
	&PKTINFO(gts10p_gct_19),
	&DLYINFO(gts10p_wait_10msec),
	&PKTINFO(gts10p_gct_20),
	&DLYINFO(gts10p_wait_10msec),
	&PKTINFO(gts10p_gct_21),
	&DLYINFO(gts10p_wait_10msec),
	&PKTINFO(gts10p_gct_22),
	&DLYINFO(gts10p_wait_10msec),
	&PKTINFO(gts10p_gct_23),
	&DLYINFO(gts10p_wait_10msec),
	&PKTINFO(gts10p_gct_24),
	&DLYINFO(gts10p_wait_10msec),
	&PKTINFO(gts10p_gct_25),
	&DLYINFO(gts10p_wait_10msec),
	&PKTINFO(gts10p_gct_26),
	&DLYINFO(gts10p_wait_1000msec),
	&PKTINFO(gts10p_gct_27),
	&DLYINFO(gts10p_wait_20msec),
	&CONDINFO_FI(gts10p_cond_is_gct_vddm_ge_vddm_lv),

	&ana38407_restbl[RES_GRAM_CHECKSUM],
	&KEYINFO(gts10p_level2_key_disable),
	&KEYINFO(gts10p_level1_key_disable),
};

static void *gts10p_gct_img_1_update_cmdtbl[] = {
	&KEYINFO(gts10p_level1_key_enable),
	&KEYINFO(gts10p_level2_key_enable),
	&CONDINFO_IF(gts10p_cond_is_gct_vddm_ge_vddm_lv),
	/* 28 ~ 38 */
	&PKTINFO(gts10p_gct_28),
	&DLYINFO(gts10p_wait_10msec),
	&PKTINFO(gts10p_gct_29),
	&DLYINFO(gts10p_wait_100msec),
	&PKTINFO(gts10p_gct_30),
	&DLYINFO(gts10p_wait_10msec),
	&PKTINFO(gts10p_gct_31),
	&DLYINFO(gts10p_wait_100msec),
	&PKTINFO(gts10p_gct_32),
	&DLYINFO(gts10p_wait_10msec),
	&PKTINFO(gts10p_gct_33),
	&DLYINFO(gts10p_wait_100msec),
	&DLYINFO(gts10p_wait_50msec),
	&PKTINFO(gts10p_gct_34),
	&DLYINFO(gts10p_wait_10msec),
	&PKTINFO(gts10p_gct_35),
	&DLYINFO(gts10p_wait_10msec),
	&PKTINFO(gts10p_gct_36),
	&DLYINFO(gts10p_wait_10msec),
	&PKTINFO(gts10p_gct_37),
	&DLYINFO(gts10p_wait_1000msec),
	&PKTINFO(gts10p_gct_38),
	&DLYINFO(gts10p_wait_20msec),
	&CONDINFO_FI(gts10p_cond_is_gct_vddm_ge_vddm_lv),
	&ana38407_restbl[RES_GRAM_CHECKSUM],
	&KEYINFO(gts10p_level2_key_disable),
	&KEYINFO(gts10p_level1_key_disable),
};

static void *gts10p_gct_exit_cmdtbl[] = {
	NULL,
};
#endif

static void *gts10p_dummy_cmdtbl[] = {
	NULL,
};

static struct seqinfo gts10p_seqtbl[] = {
	SEQINFO_INIT(PANEL_INIT_SEQ, gts10p_init_cmdtbl),
	SEQINFO_INIT(PANEL_RES_INIT_SEQ, gts10p_res_init_cmdtbl),
	SEQINFO_INIT(PANEL_SET_BL_SEQ, gts10p_set_bl_cmdtbl),
	SEQINFO_INIT(PANEL_DISPLAY_ON_SEQ, gts10p_display_on_cmdtbl),
	SEQINFO_INIT(PANEL_DISPLAY_OFF_SEQ, gts10p_display_off_cmdtbl),
	SEQINFO_INIT(PANEL_EXIT_SEQ, gts10p_exit_cmdtbl),
	SEQINFO_INIT(PANEL_DISPLAY_MODE_SEQ, gts10p_display_mode_cmdtbl),
	SEQINFO_INIT(PANEL_DUMP_SEQ, gts10p_dump_cmdtbl),
	SEQINFO_INIT(PANEL_CHECK_CONDITION_SEQ, gts10p_check_condition_cmdtbl),
#ifdef CONFIG_USDM_PANEL_MASK_LAYER
	SEQINFO_INIT(PANEL_MASK_LAYER_ENTER_BR_SEQ, gts10p_mask_layer_enter_br_cmdtbl),
	SEQINFO_INIT(PANEL_MASK_LAYER_EXIT_BR_SEQ, gts10p_mask_layer_exit_br_cmdtbl),
	SEQINFO_INIT(PANEL_FP_GREEN_CIRCLE_ON, gts10p_green_circle_on_cmdtbl),
	SEQINFO_INIT(PANEL_FP_GREEN_CIRCLE_OFF, gts10p_green_circle_off_cmdtbl),
#endif
#ifdef CONFIG_USDM_TCON_PRE_EMPHASIS_TEST
	SEQINFO_INIT(PANEL_TCON_PRE_EMPHASIS_TEST_ON_SEQ, gts10p_tcon_pre_emphasis_test_on_cmdtbl),
	SEQINFO_INIT(PANEL_TCON_PRE_EMPHASIS_TEST_OFF_SEQ, gts10p_tcon_pre_emphasis_test_off_cmdtbl),
#endif
#ifdef CONFIG_USDM_FACTORY_GCT_TEST
	SEQINFO_INIT(PANEL_GCT_ENTER_SEQ, gts10p_gct_enter_cmdtbl),
	SEQINFO_INIT(PANEL_GCT_VDDM_SEQ, gts10p_gct_vddm_cmdtbl),
	SEQINFO_INIT(PANEL_GCT_IMG_0_UPDATE_SEQ, gts10p_gct_img_0_update_cmdtbl),
	SEQINFO_INIT(PANEL_GCT_IMG_1_UPDATE_SEQ, gts10p_gct_img_1_update_cmdtbl),
	SEQINFO_INIT(PANEL_GCT_EXIT_SEQ, gts10p_gct_exit_cmdtbl),
#endif
	SEQINFO_INIT(PANEL_DUMMY_SEQ, gts10p_dummy_cmdtbl),
};

/* BLIC SETTING START */
static u8 ANA38407_GTS10P_MAX77816_I2C_INIT[] = {
	0x03, 0x70,	/* (BB_EN=1, GPIO_CFG = disable) */
	0x02, 0x8E,	/* (3.1A) */};

#ifdef DEBUG_I2C_READ
static u8 ANA38407_GTS10P_MAX77816_I2C_DUMP[] = {
	0x03, 0x00,
	0x02, 0x00,
};
#endif

static DEFINE_STATIC_PACKET(ana38407_gts10p_max77816_i2c_init, I2C_PKT_TYPE_WR, ANA38407_GTS10P_MAX77816_I2C_INIT, 0);
#ifdef DEBUG_I2C_READ
static DEFINE_STATIC_PACKET(ana38407_gts10p_max77816_i2c_dump, I2C_PKT_TYPE_RD, ANA38407_GTS10P_MAX77816_I2C_DUMP, 0);
#endif

static void *ana38407_gts10p_max77816_init_cmdtbl[] = {
#ifdef DEBUG_I2C_READ
	&PKTINFO(ana38407_gts10p_max77816_i2c_dump),
#endif
	&PKTINFO(ana38407_gts10p_max77816_i2c_init),
#ifdef DEBUG_I2C_READ
	&PKTINFO(ana38407_gts10p_max77816_i2c_dump),
#endif
};

static struct seqinfo ana38407_gts10p_max77816_seq_tbl[] = {
	SEQINFO_INIT(PANEL_BLIC_I2C_ON_SEQ, ana38407_gts10p_max77816_init_cmdtbl),
};

static struct blic_data ana38407_gts10p_max77816_blic_data = {
	.name = "max77816",
	.seqtbl = ana38407_gts10p_max77816_seq_tbl,
	.nr_seqtbl = ARRAY_SIZE(ana38407_gts10p_max77816_seq_tbl),
};

static struct blic_data *ana38407_gts10p_max77816_blic_tbl[] = {
	&ana38407_gts10p_max77816_blic_data,
};
/* BLIC SETTING END */

struct common_panel_info ana38407_gts10p_panel_info = {
	.ldi_name = "ana38407",
	.name = "ana38407_gts10p",
	.model = "AMS642DF01",
	.vendor = "SDC",
	.id = 0x800000,
	.rev = 0,
	.ddi_props = {
		.gpara = (DDI_SUPPORT_WRITE_GPARA | DDI_SUPPORT_READ_GPARA | DDI_SUPPORT_POINT_GPARA),
		.err_fg_recovery = false,
		.support_vrr = true,
		.dft_osc_freq = 181300,
		/* Todo the hs_clk must be synchronized with the value of LK,
		 * It must be changed to be read and set in the LK.
		 */
		.dft_dsi_freq = 1524000,
		.img_fifo_size = 200,
		.support_avoid_sandstorm = true,
	},

	.ddi_ops = {
		.get_cell_id = ana38407_get_cell_id,
		.get_octa_id = ana38407_get_octa_id,
		.get_manufacture_code = ana38407_get_manufacture_code,
		.get_manufacture_date = ana38407_get_manufacture_date,
#ifdef CONFIG_USDM_FACTORY_ECC_TEST
		.ecc_test = ana38407_ecc_test,
#endif
#ifdef CONFIG_USDM_FACTORY_DSC_CRC_TEST
		.decoder_test = ana38407_decoder_test,
#endif
#ifdef CONFIG_USDM_FACTORY_GCT_TEST
		.gct_chksum_is_valid = ana38407_gct_chksum_is_valid,
#endif
	},
#if defined(CONFIG_USDM_PANEL_DISPLAY_MODE)
	.common_panel_modes = &ana38407_gts10p_display_modes,
#endif
	.mres = {
		.nr_resol = ARRAY_SIZE(ana38407_gts10p_default_resol),
		.resol = ana38407_gts10p_default_resol,
	},
	.vrrtbl = ana38407_gts10p_default_vrrtbl,
	.nr_vrrtbl = ARRAY_SIZE(ana38407_gts10p_default_vrrtbl),
	.maptbl = gts10p_maptbl,
	.nr_maptbl = ARRAY_SIZE(gts10p_maptbl),
	.seqtbl = gts10p_seqtbl,
	.nr_seqtbl = ARRAY_SIZE(gts10p_seqtbl),
	.rditbl = ana38407_rditbl,
	.nr_rditbl = ARRAY_SIZE(ana38407_rditbl),
	.restbl = ana38407_restbl,
	.nr_restbl = ARRAY_SIZE(ana38407_restbl),
	.dumpinfo = ana38407_dmptbl,
	.nr_dumpinfo = ARRAY_SIZE(ana38407_dmptbl),

#ifdef CONFIG_USDM_MDNIE
	.mdnie_tune = &ana38407_gts10p_mdnie_tune,
#endif
	.panel_dim_info = {
		[PANEL_BL_SUBDEV_TYPE_DISP] = &ana38407_gts10p_panel_dimming_info,
	},
#ifdef CONFIG_USDM_PANEL_SELF_DISPLAY
	.aod_tune = &ana38407_gts10p_aod,
#endif
	.blic_data_tbl = ana38407_gts10p_max77816_blic_tbl,
	.nr_blic_data_tbl = ARRAY_SIZE(ana38407_gts10p_max77816_blic_tbl),
};

#endif /* __ANA38407_GTS10P_PANEL_H__ */
